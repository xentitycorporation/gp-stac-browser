{"version":3,"file":"js/4527.0934db39.js","mappings":"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","sources":["webpack://@radiantearth/stac-browser/./node_modules/@kurkle/color/dist/color.esm.js","webpack://@radiantearth/stac-browser/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://@radiantearth/stac-browser/./node_modules/chart.js/dist/chart.js","webpack://@radiantearth/stac-browser/./node_modules/vue-chartjs/dist/index.js"],"sourcesContent":["/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.8\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */ function isNonPrimitive(n) {\n    return typeof n === 'symbol' || typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n);\n}\nfunction isNumber(n) {\n    return !isNonPrimitive(n) && !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , vScale , _parsed  } = meta;\n        const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n            if (spanGaps) {\n                const distanceToDefinedLo = _parsed.slice(0, start + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                start -= Math.max(0, distanceToDefinedLo);\n            }\n            start = _limitValue(start, 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            let end = Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n            if (spanGaps) {\n                const distanceToDefinedHi = _parsed.slice(end - 1).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                end += Math.max(0, distanceToDefinedHi);\n            }\n            count = _limitValue(end, start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.8\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            const result = lookupMethod(data, axis, value);\n            if (spanGaps) {\n                const { vScale  } = controller._cachedMeta;\n                const { _parsed  } = metaset;\n                const distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.lo -= Math.max(0, distanceToDefinedLo);\n                const distanceToDefinedHi = _parsed.slice(result.hi).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.hi += Math.max(0, distanceToDefinedHi);\n            }\n            return result;\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.8\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import { Chart as Chart$1, BarController, DoughnutController, LineController, PieController, PolarAreaController, RadarController, BubbleController, ScatterController } from 'chart.js';\nimport { version, isProxy, toRaw, defineComponent, ref, shallowRef, onMounted, onUnmounted, watch, nextTick, h } from 'vue';\n\nconst CommonProps = {\n    data: {\n        type: Object,\n        required: true\n    },\n    options: {\n        type: Object,\n        default: ()=>({})\n    },\n    plugins: {\n        type: Array,\n        default: ()=>[]\n    },\n    datasetIdKey: {\n        type: String,\n        default: \"label\"\n    },\n    updateMode: {\n        type: String,\n        default: undefined\n    }\n};\nconst A11yProps = {\n    ariaLabel: {\n        type: String\n    },\n    ariaDescribedby: {\n        type: String\n    }\n};\nconst Props = {\n    type: {\n        type: String,\n        required: true\n    },\n    destroyDelay: {\n        type: Number,\n        default: 0 // No delay by default\n    },\n    ...CommonProps,\n    ...A11yProps\n};\n\nconst compatProps = version[0] === \"2\" ? (internals, props)=>Object.assign(internals, {\n        attrs: props\n    }) : (internals, props)=>Object.assign(internals, props);\nfunction toRawIfProxy(obj) {\n    return isProxy(obj) ? toRaw(obj) : obj;\n}\nfunction cloneProxy(obj) {\n    let src = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : obj;\n    return isProxy(src) ? new Proxy(obj, {}) : obj;\n}\nfunction setOptions(chart, nextOptions) {\n    const options = chart.options;\n    if (options && nextOptions) {\n        Object.assign(options, nextOptions);\n    }\n}\nfunction setLabels(currentData, nextLabels) {\n    currentData.labels = nextLabels;\n}\nfunction setDatasets(currentData, nextDatasets, datasetIdKey) {\n    const addedDatasets = [];\n    currentData.datasets = nextDatasets.map((nextDataset)=>{\n        // given the new set, find it's current match\n        const currentDataset = currentData.datasets.find((dataset)=>dataset[datasetIdKey] === nextDataset[datasetIdKey]);\n        // There is no original to update, so simply add new one\n        if (!currentDataset || !nextDataset.data || addedDatasets.includes(currentDataset)) {\n            return {\n                ...nextDataset\n            };\n        }\n        addedDatasets.push(currentDataset);\n        Object.assign(currentDataset, nextDataset);\n        return currentDataset;\n    });\n}\nfunction cloneData(data, datasetIdKey) {\n    const nextData = {\n        labels: [],\n        datasets: []\n    };\n    setLabels(nextData, data.labels);\n    setDatasets(nextData, data.datasets, datasetIdKey);\n    return nextData;\n}\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getDatasetAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"dataset\", {\n        intersect: true\n    }, false);\n}\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"nearest\", {\n        intersect: true\n    }, false);\n}\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementsAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"index\", {\n        intersect: true\n    }, false);\n}\n\nconst Chart = defineComponent({\n    props: Props,\n    setup (props, param) {\n        let { expose , slots  } = param;\n        const canvasRef = ref(null);\n        const chartRef = shallowRef(null);\n        expose({\n            chart: chartRef\n        });\n        const renderChart = ()=>{\n            if (!canvasRef.value) return;\n            const { type , data , options , plugins , datasetIdKey  } = props;\n            const clonedData = cloneData(data, datasetIdKey);\n            const proxiedData = cloneProxy(clonedData, data);\n            chartRef.value = new Chart$1(canvasRef.value, {\n                type,\n                data: proxiedData,\n                options: {\n                    ...options\n                },\n                plugins\n            });\n        };\n        const destroyChart = ()=>{\n            const chart = toRaw(chartRef.value);\n            if (chart) {\n                if (props.destroyDelay > 0) {\n                    setTimeout(()=>{\n                        chart.destroy();\n                        chartRef.value = null;\n                    }, props.destroyDelay);\n                } else {\n                    chart.destroy();\n                    chartRef.value = null;\n                }\n            }\n        };\n        const update = (chart)=>{\n            chart.update(props.updateMode);\n        };\n        onMounted(renderChart);\n        onUnmounted(destroyChart);\n        watch([\n            ()=>props.options,\n            ()=>props.data\n        ], (param, param1)=>{\n            let [nextOptionsProxy, nextDataProxy] = param, [prevOptionsProxy, prevDataProxy] = param1;\n            const chart = toRaw(chartRef.value);\n            if (!chart) {\n                return;\n            }\n            let shouldUpdate = false;\n            if (nextOptionsProxy) {\n                const nextOptions = toRawIfProxy(nextOptionsProxy);\n                const prevOptions = toRawIfProxy(prevOptionsProxy);\n                if (nextOptions && nextOptions !== prevOptions) {\n                    setOptions(chart, nextOptions);\n                    shouldUpdate = true;\n                }\n            }\n            if (nextDataProxy) {\n                const nextLabels = toRawIfProxy(nextDataProxy.labels);\n                const prevLabels = toRawIfProxy(prevDataProxy.labels);\n                const nextDatasets = toRawIfProxy(nextDataProxy.datasets);\n                const prevDatasets = toRawIfProxy(prevDataProxy.datasets);\n                if (nextLabels !== prevLabels) {\n                    setLabels(chart.config.data, nextLabels);\n                    shouldUpdate = true;\n                }\n                if (nextDatasets && nextDatasets !== prevDatasets) {\n                    setDatasets(chart.config.data, nextDatasets, props.datasetIdKey);\n                    shouldUpdate = true;\n                }\n            }\n            if (shouldUpdate) {\n                nextTick(()=>{\n                    update(chart);\n                });\n            }\n        }, {\n            deep: true\n        });\n        return ()=>{\n            return h(\"canvas\", {\n                role: \"img\",\n                ariaLabel: props.ariaLabel,\n                ariaDescribedby: props.ariaDescribedby,\n                ref: canvasRef\n            }, [\n                h(\"p\", {}, [\n                    slots.default ? slots.default() : \"\"\n                ])\n            ]);\n        };\n    }\n});\n\nfunction createTypedChart(type, registerables) {\n    Chart$1.register(registerables);\n    return defineComponent({\n        props: CommonProps,\n        setup (props, param) {\n            let { expose  } = param;\n            const ref = shallowRef(null);\n            const reforwardRef = (chartRef)=>{\n                ref.value = chartRef?.chart;\n            };\n            expose({\n                chart: ref\n            });\n            return ()=>{\n                return h(Chart, compatProps({\n                    ref: reforwardRef\n                }, {\n                    type,\n                    ...props\n                }));\n            };\n        }\n    });\n}\nconst Bar = /* #__PURE__ */ createTypedChart(\"bar\", BarController);\nconst Doughnut = /* #__PURE__ */ createTypedChart(\"doughnut\", DoughnutController);\nconst Line = /* #__PURE__ */ createTypedChart(\"line\", LineController);\nconst Pie = /* #__PURE__ */ createTypedChart(\"pie\", PieController);\nconst PolarArea = /* #__PURE__ */ createTypedChart(\"polarArea\", PolarAreaController);\nconst Radar = /* #__PURE__ */ createTypedChart(\"radar\", RadarController);\nconst Bubble = /* #__PURE__ */ createTypedChart(\"bubble\", BubbleController);\nconst Scatter = /* #__PURE__ */ createTypedChart(\"scatter\", ScatterController);\n\nexport { Bar, Bubble, Chart, Doughnut, Line, Pie, PolarArea, Radar, Scatter, createTypedChart, getDatasetAtEvent, getElementAtEvent, getElementsAtEvent };\n//# sourceMappingURL=index.js.map\n"],"names":["round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","r","g","hexParse","str","ret","len","length","alpha","hexString","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","hueValue","rgb2hsl","range","calln","Array","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","Color","constructor","type","this","_rgb","_valid","valid","obj","mix","color","weight","c1","c2","w2","p","w1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","_splitKey","parts","split","part","push","_getKeyResolver","resolveObjectKey","resolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","_isClickEvent","PI","TAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNonPrimitive","Symbol","toPrimitive","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","name","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","right","bottom","left","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","applyScaleDefaults","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","save","resetTransform","clearRect","height","restore","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","cache","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","getValue","Error","join","delete","createSubResolver","arr","filter","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","meta","count","iScale","_parsing","parsed","parse","EPSILON","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","rtl","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","rej","resolved","Animations","config","_chart","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","xScale","yScale","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","found","convertObjectDataToArray","vScale","iAxisKey","axis","vAxisKey","adata","isStacked","stacked","getStackKey","indexScale","valueScale","getUserBounds","minDefined","maxDefined","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","computeMinSampleSize","curr","_length","updateMinAndPrev","getPixelForValue","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","grouped","_index_","_value_","super","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","currentParsed","iScaleValue","skipNull","find","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","animateRotate","animateScale","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","spanGaps","lookupMethod","_reversePixels","distanceToDefinedLo","findIndex","distanceToDefinedHi","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","skip","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","garbageCollect","caches","gcLen","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","borderDashOffset","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","defaultRoutes","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","borderJoinStyle","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","mouseX","mouseY","inXRange","inYRange","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","containsColorsDefinition","containsDefaultColorsDefenitions","plugin_colors","forceOverride","_args","chartOptions","containsColorDefenition","colorizer","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","_element","WeakMap","positioners","average","xSet","xAverage","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","boxWidth","boxHeight","bodyFont","titleFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","rtlHelper","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","usePointStyle","drawOptions","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","textDirection","positionChanged","_positionChanged","_ignoreReplayEvents","handleEvent","plugin_tooltip","afterInit","afterDraw","afterEvent","addIfString","addedLabels","unshift","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","CommonProps","required","default","datasetIdKey","updateMode","A11yProps","ariaLabel","ariaDescribedby","Props","destroyDelay","compatProps","internals","attrs","toRawIfProxy","cloneProxy","src","setOptions","nextOptions","setLabels","currentData","nextLabels","setDatasets","nextDatasets","addedDatasets","nextDataset","currentDataset","cloneData","nextData","setup","param","expose","slots","canvasRef","chartRef","renderChart","clonedData","proxiedData","destroyChart","param1","nextOptionsProxy","nextDataProxy","prevOptionsProxy","prevDataProxy","shouldUpdate","prevOptions","prevLabels","prevDatasets","deep","role","ref","createTypedChart","registerables","reforwardRef","Bar","Pie"],"sourceRoot":""}