{"version":3,"file":"js/3621.4edeacfb.js","mappings":"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","sources":["webpack://@radiantearth/stac-browser/./node_modules/jwt-decode/build/esm/index.js","webpack://@radiantearth/stac-browser/./node_modules/oidc-client-ts/dist/esm/oidc-client-ts.js","webpack://@radiantearth/stac-browser/./src/auth/oidc.js"],"sourcesContent":["export class InvalidTokenError extends Error {\n}\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(atob(str).replace(/(.)/g, (m, p) => {\n        let code = p.charCodeAt(0).toString(16).toUpperCase();\n        if (code.length < 2) {\n            code = \"0\" + code;\n        }\n        return \"%\" + code;\n    }));\n}\nfunction base64UrlDecode(str) {\n    let output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw new Error(\"base64 string is not of the correct length\");\n    }\n    try {\n        return b64DecodeUnicode(output);\n    }\n    catch (err) {\n        return atob(output);\n    }\n}\nexport function jwtDecode(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified: must be a string\");\n    }\n    options || (options = {});\n    const pos = options.header === true ? 0 : 1;\n    const part = token.split(\".\")[pos];\n    if (typeof part !== \"string\") {\n        throw new InvalidTokenError(`Invalid token specified: missing part #${pos + 1}`);\n    }\n    let decoded;\n    try {\n        decoded = base64UrlDecode(part);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid base64 for part #${pos + 1} (${e.message})`);\n    }\n    try {\n        return JSON.parse(decoded);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid json for part #${pos + 1} (${e.message})`);\n    }\n}\n","// src/utils/Logger.ts\nvar nopLogger = {\n  debug: () => void 0,\n  info: () => void 0,\n  warn: () => void 0,\n  error: () => void 0\n};\nvar level;\nvar logger;\nvar Log = /* @__PURE__ */ ((Log2) => {\n  Log2[Log2[\"NONE\"] = 0] = \"NONE\";\n  Log2[Log2[\"ERROR\"] = 1] = \"ERROR\";\n  Log2[Log2[\"WARN\"] = 2] = \"WARN\";\n  Log2[Log2[\"INFO\"] = 3] = \"INFO\";\n  Log2[Log2[\"DEBUG\"] = 4] = \"DEBUG\";\n  return Log2;\n})(Log || {});\n((Log2) => {\n  function reset() {\n    level = 3 /* INFO */;\n    logger = nopLogger;\n  }\n  Log2.reset = reset;\n  function setLevel(value) {\n    if (!(0 /* NONE */ <= value && value <= 4 /* DEBUG */)) {\n      throw new Error(\"Invalid log level\");\n    }\n    level = value;\n  }\n  Log2.setLevel = setLevel;\n  function setLogger(value) {\n    logger = value;\n  }\n  Log2.setLogger = setLogger;\n})(Log || (Log = {}));\nvar Logger = class _Logger {\n  constructor(_name) {\n    this._name = _name;\n  }\n  /* eslint-disable @typescript-eslint/no-unsafe-enum-comparison */\n  debug(...args) {\n    if (level >= 4 /* DEBUG */) {\n      logger.debug(_Logger._format(this._name, this._method), ...args);\n    }\n  }\n  info(...args) {\n    if (level >= 3 /* INFO */) {\n      logger.info(_Logger._format(this._name, this._method), ...args);\n    }\n  }\n  warn(...args) {\n    if (level >= 2 /* WARN */) {\n      logger.warn(_Logger._format(this._name, this._method), ...args);\n    }\n  }\n  error(...args) {\n    if (level >= 1 /* ERROR */) {\n      logger.error(_Logger._format(this._name, this._method), ...args);\n    }\n  }\n  /* eslint-enable @typescript-eslint/no-unsafe-enum-comparison */\n  throw(err) {\n    this.error(err);\n    throw err;\n  }\n  create(method) {\n    const methodLogger = Object.create(this);\n    methodLogger._method = method;\n    methodLogger.debug(\"begin\");\n    return methodLogger;\n  }\n  static createStatic(name, staticMethod) {\n    const staticLogger = new _Logger(`${name}.${staticMethod}`);\n    staticLogger.debug(\"begin\");\n    return staticLogger;\n  }\n  static _format(name, method) {\n    const prefix = `[${name}]`;\n    return method ? `${prefix} ${method}:` : prefix;\n  }\n  /* eslint-disable @typescript-eslint/no-unsafe-enum-comparison */\n  // helpers for static class methods\n  static debug(name, ...args) {\n    if (level >= 4 /* DEBUG */) {\n      logger.debug(_Logger._format(name), ...args);\n    }\n  }\n  static info(name, ...args) {\n    if (level >= 3 /* INFO */) {\n      logger.info(_Logger._format(name), ...args);\n    }\n  }\n  static warn(name, ...args) {\n    if (level >= 2 /* WARN */) {\n      logger.warn(_Logger._format(name), ...args);\n    }\n  }\n  static error(name, ...args) {\n    if (level >= 1 /* ERROR */) {\n      logger.error(_Logger._format(name), ...args);\n    }\n  }\n  /* eslint-enable @typescript-eslint/no-unsafe-enum-comparison */\n};\nLog.reset();\n\n// src/utils/JwtUtils.ts\nimport { jwtDecode } from \"jwt-decode\";\nvar JwtUtils = class {\n  // IMPORTANT: doesn't validate the token\n  static decode(token) {\n    try {\n      return jwtDecode(token);\n    } catch (err) {\n      Logger.error(\"JwtUtils.decode\", err);\n      throw err;\n    }\n  }\n  static async generateSignedJwt(header, payload, privateKey) {\n    const encodedHeader = CryptoUtils.encodeBase64Url(new TextEncoder().encode(JSON.stringify(header)));\n    const encodedPayload = CryptoUtils.encodeBase64Url(new TextEncoder().encode(JSON.stringify(payload)));\n    const encodedToken = `${encodedHeader}.${encodedPayload}`;\n    const signature = await window.crypto.subtle.sign(\n      {\n        name: \"ECDSA\",\n        hash: { name: \"SHA-256\" }\n      },\n      privateKey,\n      new TextEncoder().encode(encodedToken)\n    );\n    const encodedSignature = CryptoUtils.encodeBase64Url(new Uint8Array(signature));\n    return `${encodedToken}.${encodedSignature}`;\n  }\n};\n\n// src/utils/CryptoUtils.ts\nvar UUID_V4_TEMPLATE = \"10000000-1000-4000-8000-100000000000\";\nvar toBase64 = (val) => btoa([...new Uint8Array(val)].map((chr) => String.fromCharCode(chr)).join(\"\"));\nvar _CryptoUtils = class _CryptoUtils {\n  static _randomWord() {\n    const arr = new Uint32Array(1);\n    crypto.getRandomValues(arr);\n    return arr[0];\n  }\n  /**\n   * Generates RFC4122 version 4 guid\n   */\n  static generateUUIDv4() {\n    const uuid = UUID_V4_TEMPLATE.replace(\n      /[018]/g,\n      (c) => (+c ^ _CryptoUtils._randomWord() & 15 >> +c / 4).toString(16)\n    );\n    return uuid.replace(/-/g, \"\");\n  }\n  /**\n   * PKCE: Generate a code verifier\n   */\n  static generateCodeVerifier() {\n    return _CryptoUtils.generateUUIDv4() + _CryptoUtils.generateUUIDv4() + _CryptoUtils.generateUUIDv4();\n  }\n  /**\n   * PKCE: Generate a code challenge\n   */\n  static async generateCodeChallenge(code_verifier) {\n    if (!crypto.subtle) {\n      throw new Error(\"Crypto.subtle is available only in secure contexts (HTTPS).\");\n    }\n    try {\n      const encoder = new TextEncoder();\n      const data = encoder.encode(code_verifier);\n      const hashed = await crypto.subtle.digest(\"SHA-256\", data);\n      return toBase64(hashed).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=+$/, \"\");\n    } catch (err) {\n      Logger.error(\"CryptoUtils.generateCodeChallenge\", err);\n      throw err;\n    }\n  }\n  /**\n   * Generates a base64-encoded string for a basic auth header\n   */\n  static generateBasicAuth(client_id, client_secret) {\n    const encoder = new TextEncoder();\n    const data = encoder.encode([client_id, client_secret].join(\":\"));\n    return toBase64(data);\n  }\n  /**\n   * Generates a hash of a string using a given algorithm\n   * @param alg\n   * @param message\n   */\n  static async hash(alg, message) {\n    const msgUint8 = new TextEncoder().encode(message);\n    const hashBuffer = await crypto.subtle.digest(alg, msgUint8);\n    return new Uint8Array(hashBuffer);\n  }\n  /**\n   * Generates a rfc7638 compliant jwk thumbprint\n   * @param jwk\n   */\n  static async customCalculateJwkThumbprint(jwk) {\n    let jsonObject;\n    switch (jwk.kty) {\n      case \"RSA\":\n        jsonObject = {\n          \"e\": jwk.e,\n          \"kty\": jwk.kty,\n          \"n\": jwk.n\n        };\n        break;\n      case \"EC\":\n        jsonObject = {\n          \"crv\": jwk.crv,\n          \"kty\": jwk.kty,\n          \"x\": jwk.x,\n          \"y\": jwk.y\n        };\n        break;\n      case \"OKP\":\n        jsonObject = {\n          \"crv\": jwk.crv,\n          \"kty\": jwk.kty,\n          \"x\": jwk.x\n        };\n        break;\n      case \"oct\":\n        jsonObject = {\n          \"crv\": jwk.k,\n          \"kty\": jwk.kty\n        };\n        break;\n      default:\n        throw new Error(\"Unknown jwk type\");\n    }\n    const utf8encodedAndHashed = await _CryptoUtils.hash(\"SHA-256\", JSON.stringify(jsonObject));\n    return _CryptoUtils.encodeBase64Url(utf8encodedAndHashed);\n  }\n  static async generateDPoPProof({\n    url,\n    accessToken,\n    httpMethod,\n    keyPair,\n    nonce\n  }) {\n    let hashedToken;\n    let encodedHash;\n    const payload = {\n      \"jti\": window.crypto.randomUUID(),\n      \"htm\": httpMethod != null ? httpMethod : \"GET\",\n      \"htu\": url,\n      \"iat\": Math.floor(Date.now() / 1e3)\n    };\n    if (accessToken) {\n      hashedToken = await _CryptoUtils.hash(\"SHA-256\", accessToken);\n      encodedHash = _CryptoUtils.encodeBase64Url(hashedToken);\n      payload.ath = encodedHash;\n    }\n    if (nonce) {\n      payload.nonce = nonce;\n    }\n    try {\n      const publicJwk = await crypto.subtle.exportKey(\"jwk\", keyPair.publicKey);\n      const header = {\n        \"alg\": \"ES256\",\n        \"typ\": \"dpop+jwt\",\n        \"jwk\": {\n          \"crv\": publicJwk.crv,\n          \"kty\": publicJwk.kty,\n          \"x\": publicJwk.x,\n          \"y\": publicJwk.y\n        }\n      };\n      return await JwtUtils.generateSignedJwt(header, payload, keyPair.privateKey);\n    } catch (err) {\n      if (err instanceof TypeError) {\n        throw new Error(`Error exporting dpop public key: ${err.message}`);\n      } else {\n        throw err;\n      }\n    }\n  }\n  static async generateDPoPJkt(keyPair) {\n    try {\n      const publicJwk = await crypto.subtle.exportKey(\"jwk\", keyPair.publicKey);\n      return await _CryptoUtils.customCalculateJwkThumbprint(publicJwk);\n    } catch (err) {\n      if (err instanceof TypeError) {\n        throw new Error(`Could not retrieve dpop keys from storage: ${err.message}`);\n      } else {\n        throw err;\n      }\n    }\n  }\n  static async generateDPoPKeys() {\n    return await window.crypto.subtle.generateKey(\n      {\n        name: \"ECDSA\",\n        namedCurve: \"P-256\"\n      },\n      false,\n      [\"sign\", \"verify\"]\n    );\n  }\n};\n/**\n * Generates a base64url encoded string\n */\n_CryptoUtils.encodeBase64Url = (input) => {\n  return toBase64(input).replace(/=/g, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n};\nvar CryptoUtils = _CryptoUtils;\n\n// src/utils/Event.ts\nvar Event = class {\n  constructor(_name) {\n    this._name = _name;\n    this._callbacks = [];\n    this._logger = new Logger(`Event('${this._name}')`);\n  }\n  addHandler(cb) {\n    this._callbacks.push(cb);\n    return () => this.removeHandler(cb);\n  }\n  removeHandler(cb) {\n    const idx = this._callbacks.lastIndexOf(cb);\n    if (idx >= 0) {\n      this._callbacks.splice(idx, 1);\n    }\n  }\n  async raise(...ev) {\n    this._logger.debug(\"raise:\", ...ev);\n    for (const cb of this._callbacks) {\n      await cb(...ev);\n    }\n  }\n};\n\n// src/utils/PopupUtils.ts\nvar PopupUtils = class {\n  /**\n   * Populates a map of window features with a placement centered in front of\n   * the current window. If no explicit width is given, a default value is\n   * binned into [800, 720, 600, 480, 360] based on the current window's width.\n   */\n  static center({ ...features }) {\n    var _a, _b, _c;\n    if (features.width == null)\n      features.width = (_a = [800, 720, 600, 480].find((width) => width <= window.outerWidth / 1.618)) != null ? _a : 360;\n    (_b = features.left) != null ? _b : features.left = Math.max(0, Math.round(window.screenX + (window.outerWidth - features.width) / 2));\n    if (features.height != null)\n      (_c = features.top) != null ? _c : features.top = Math.max(0, Math.round(window.screenY + (window.outerHeight - features.height) / 2));\n    return features;\n  }\n  static serialize(features) {\n    return Object.entries(features).filter(([, value]) => value != null).map(([key, value]) => `${key}=${typeof value !== \"boolean\" ? value : value ? \"yes\" : \"no\"}`).join(\",\");\n  }\n};\n\n// src/utils/Timer.ts\nvar Timer = class _Timer extends Event {\n  constructor() {\n    super(...arguments);\n    this._logger = new Logger(`Timer('${this._name}')`);\n    this._timerHandle = null;\n    this._expiration = 0;\n    this._callback = () => {\n      const diff = this._expiration - _Timer.getEpochTime();\n      this._logger.debug(\"timer completes in\", diff);\n      if (this._expiration <= _Timer.getEpochTime()) {\n        this.cancel();\n        void super.raise();\n      }\n    };\n  }\n  // get the time\n  static getEpochTime() {\n    return Math.floor(Date.now() / 1e3);\n  }\n  init(durationInSeconds) {\n    const logger2 = this._logger.create(\"init\");\n    durationInSeconds = Math.max(Math.floor(durationInSeconds), 1);\n    const expiration = _Timer.getEpochTime() + durationInSeconds;\n    if (this.expiration === expiration && this._timerHandle) {\n      logger2.debug(\"skipping since already initialized for expiration at\", this.expiration);\n      return;\n    }\n    this.cancel();\n    logger2.debug(\"using duration\", durationInSeconds);\n    this._expiration = expiration;\n    const timerDurationInSeconds = Math.min(durationInSeconds, 5);\n    this._timerHandle = setInterval(this._callback, timerDurationInSeconds * 1e3);\n  }\n  get expiration() {\n    return this._expiration;\n  }\n  cancel() {\n    this._logger.create(\"cancel\");\n    if (this._timerHandle) {\n      clearInterval(this._timerHandle);\n      this._timerHandle = null;\n    }\n  }\n};\n\n// src/utils/UrlUtils.ts\nvar UrlUtils = class {\n  static readParams(url, responseMode = \"query\") {\n    if (!url) throw new TypeError(\"Invalid URL\");\n    const parsedUrl = new URL(url, \"http://127.0.0.1\");\n    const params = parsedUrl[responseMode === \"fragment\" ? \"hash\" : \"search\"];\n    return new URLSearchParams(params.slice(1));\n  }\n};\nvar URL_STATE_DELIMITER = \";\";\n\n// src/errors/ErrorResponse.ts\nvar ErrorResponse = class extends Error {\n  constructor(args, form) {\n    var _a, _b, _c;\n    super(args.error_description || args.error || \"\");\n    this.form = form;\n    /** Marker to detect class: \"ErrorResponse\" */\n    this.name = \"ErrorResponse\";\n    if (!args.error) {\n      Logger.error(\"ErrorResponse\", \"No error passed\");\n      throw new Error(\"No error passed\");\n    }\n    this.error = args.error;\n    this.error_description = (_a = args.error_description) != null ? _a : null;\n    this.error_uri = (_b = args.error_uri) != null ? _b : null;\n    this.state = args.userState;\n    this.session_state = (_c = args.session_state) != null ? _c : null;\n    this.url_state = args.url_state;\n  }\n};\n\n// src/errors/ErrorTimeout.ts\nvar ErrorTimeout = class extends Error {\n  constructor(message) {\n    super(message);\n    /** Marker to detect class: \"ErrorTimeout\" */\n    this.name = \"ErrorTimeout\";\n  }\n};\n\n// src/AccessTokenEvents.ts\nvar AccessTokenEvents = class {\n  constructor(args) {\n    this._logger = new Logger(\"AccessTokenEvents\");\n    this._expiringTimer = new Timer(\"Access token expiring\");\n    this._expiredTimer = new Timer(\"Access token expired\");\n    this._expiringNotificationTimeInSeconds = args.expiringNotificationTimeInSeconds;\n  }\n  async load(container) {\n    const logger2 = this._logger.create(\"load\");\n    if (container.access_token && container.expires_in !== void 0) {\n      const duration = container.expires_in;\n      logger2.debug(\"access token present, remaining duration:\", duration);\n      if (duration > 0) {\n        let expiring = duration - this._expiringNotificationTimeInSeconds;\n        if (expiring <= 0) {\n          expiring = 1;\n        }\n        logger2.debug(\"registering expiring timer, raising in\", expiring, \"seconds\");\n        this._expiringTimer.init(expiring);\n      } else {\n        logger2.debug(\"canceling existing expiring timer because we're past expiration.\");\n        this._expiringTimer.cancel();\n      }\n      const expired = duration + 1;\n      logger2.debug(\"registering expired timer, raising in\", expired, \"seconds\");\n      this._expiredTimer.init(expired);\n    } else {\n      this._expiringTimer.cancel();\n      this._expiredTimer.cancel();\n    }\n  }\n  async unload() {\n    this._logger.debug(\"unload: canceling existing access token timers\");\n    this._expiringTimer.cancel();\n    this._expiredTimer.cancel();\n  }\n  /**\n   * Add callback: Raised prior to the access token expiring.\n   */\n  addAccessTokenExpiring(cb) {\n    return this._expiringTimer.addHandler(cb);\n  }\n  /**\n   * Remove callback: Raised prior to the access token expiring.\n   */\n  removeAccessTokenExpiring(cb) {\n    this._expiringTimer.removeHandler(cb);\n  }\n  /**\n   * Add callback: Raised after the access token has expired.\n   */\n  addAccessTokenExpired(cb) {\n    return this._expiredTimer.addHandler(cb);\n  }\n  /**\n   * Remove callback: Raised after the access token has expired.\n   */\n  removeAccessTokenExpired(cb) {\n    this._expiredTimer.removeHandler(cb);\n  }\n};\n\n// src/CheckSessionIFrame.ts\nvar CheckSessionIFrame = class {\n  constructor(_callback, _client_id, url, _intervalInSeconds, _stopOnError) {\n    this._callback = _callback;\n    this._client_id = _client_id;\n    this._intervalInSeconds = _intervalInSeconds;\n    this._stopOnError = _stopOnError;\n    this._logger = new Logger(\"CheckSessionIFrame\");\n    this._timer = null;\n    this._session_state = null;\n    this._message = (e) => {\n      if (e.origin === this._frame_origin && e.source === this._frame.contentWindow) {\n        if (e.data === \"error\") {\n          this._logger.error(\"error message from check session op iframe\");\n          if (this._stopOnError) {\n            this.stop();\n          }\n        } else if (e.data === \"changed\") {\n          this._logger.debug(\"changed message from check session op iframe\");\n          this.stop();\n          void this._callback();\n        } else {\n          this._logger.debug(e.data + \" message from check session op iframe\");\n        }\n      }\n    };\n    const parsedUrl = new URL(url);\n    this._frame_origin = parsedUrl.origin;\n    this._frame = window.document.createElement(\"iframe\");\n    this._frame.style.visibility = \"hidden\";\n    this._frame.style.position = \"fixed\";\n    this._frame.style.left = \"-1000px\";\n    this._frame.style.top = \"0\";\n    this._frame.width = \"0\";\n    this._frame.height = \"0\";\n    this._frame.src = parsedUrl.href;\n  }\n  load() {\n    return new Promise((resolve) => {\n      this._frame.onload = () => {\n        resolve();\n      };\n      window.document.body.appendChild(this._frame);\n      window.addEventListener(\"message\", this._message, false);\n    });\n  }\n  start(session_state) {\n    if (this._session_state === session_state) {\n      return;\n    }\n    this._logger.create(\"start\");\n    this.stop();\n    this._session_state = session_state;\n    const send = () => {\n      if (!this._frame.contentWindow || !this._session_state) {\n        return;\n      }\n      this._frame.contentWindow.postMessage(this._client_id + \" \" + this._session_state, this._frame_origin);\n    };\n    send();\n    this._timer = setInterval(send, this._intervalInSeconds * 1e3);\n  }\n  stop() {\n    this._logger.create(\"stop\");\n    this._session_state = null;\n    if (this._timer) {\n      clearInterval(this._timer);\n      this._timer = null;\n    }\n  }\n};\n\n// src/InMemoryWebStorage.ts\nvar InMemoryWebStorage = class {\n  constructor() {\n    this._logger = new Logger(\"InMemoryWebStorage\");\n    this._data = {};\n  }\n  clear() {\n    this._logger.create(\"clear\");\n    this._data = {};\n  }\n  getItem(key) {\n    this._logger.create(`getItem('${key}')`);\n    return this._data[key];\n  }\n  setItem(key, value) {\n    this._logger.create(`setItem('${key}')`);\n    this._data[key] = value;\n  }\n  removeItem(key) {\n    this._logger.create(`removeItem('${key}')`);\n    delete this._data[key];\n  }\n  get length() {\n    return Object.getOwnPropertyNames(this._data).length;\n  }\n  key(index) {\n    return Object.getOwnPropertyNames(this._data)[index];\n  }\n};\n\n// src/errors/ErrorDPoPNonce.ts\nvar ErrorDPoPNonce = class extends Error {\n  constructor(nonce, message) {\n    super(message);\n    /** Marker to detect class: \"ErrorDPoPNonce\" */\n    this.name = \"ErrorDPoPNonce\";\n    this.nonce = nonce;\n  }\n};\n\n// src/JsonService.ts\nvar JsonService = class {\n  constructor(additionalContentTypes = [], _jwtHandler = null, _extraHeaders = {}) {\n    this._jwtHandler = _jwtHandler;\n    this._extraHeaders = _extraHeaders;\n    this._logger = new Logger(\"JsonService\");\n    this._contentTypes = [];\n    this._contentTypes.push(...additionalContentTypes, \"application/json\");\n    if (_jwtHandler) {\n      this._contentTypes.push(\"application/jwt\");\n    }\n  }\n  async fetchWithTimeout(input, init = {}) {\n    const { timeoutInSeconds, ...initFetch } = init;\n    if (!timeoutInSeconds) {\n      return await fetch(input, initFetch);\n    }\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), timeoutInSeconds * 1e3);\n    try {\n      const response = await fetch(input, {\n        ...init,\n        signal: controller.signal\n      });\n      return response;\n    } catch (err) {\n      if (err instanceof DOMException && err.name === \"AbortError\") {\n        throw new ErrorTimeout(\"Network timed out\");\n      }\n      throw err;\n    } finally {\n      clearTimeout(timeoutId);\n    }\n  }\n  async getJson(url, {\n    token,\n    credentials,\n    timeoutInSeconds\n  } = {}) {\n    const logger2 = this._logger.create(\"getJson\");\n    const headers = {\n      \"Accept\": this._contentTypes.join(\", \")\n    };\n    if (token) {\n      logger2.debug(\"token passed, setting Authorization header\");\n      headers[\"Authorization\"] = \"Bearer \" + token;\n    }\n    this._appendExtraHeaders(headers);\n    let response;\n    try {\n      logger2.debug(\"url:\", url);\n      response = await this.fetchWithTimeout(url, { method: \"GET\", headers, timeoutInSeconds, credentials });\n    } catch (err) {\n      logger2.error(\"Network Error\");\n      throw err;\n    }\n    logger2.debug(\"HTTP response received, status\", response.status);\n    const contentType = response.headers.get(\"Content-Type\");\n    if (contentType && !this._contentTypes.find((item) => contentType.startsWith(item))) {\n      logger2.throw(new Error(`Invalid response Content-Type: ${contentType != null ? contentType : \"undefined\"}, from URL: ${url}`));\n    }\n    if (response.ok && this._jwtHandler && (contentType == null ? void 0 : contentType.startsWith(\"application/jwt\"))) {\n      return await this._jwtHandler(await response.text());\n    }\n    let json;\n    try {\n      json = await response.json();\n    } catch (err) {\n      logger2.error(\"Error parsing JSON response\", err);\n      if (response.ok) throw err;\n      throw new Error(`${response.statusText} (${response.status})`);\n    }\n    if (!response.ok) {\n      logger2.error(\"Error from server:\", json);\n      if (json.error) {\n        throw new ErrorResponse(json);\n      }\n      throw new Error(`${response.statusText} (${response.status}): ${JSON.stringify(json)}`);\n    }\n    return json;\n  }\n  async postForm(url, {\n    body,\n    basicAuth,\n    timeoutInSeconds,\n    initCredentials,\n    extraHeaders\n  }) {\n    const logger2 = this._logger.create(\"postForm\");\n    const headers = {\n      \"Accept\": this._contentTypes.join(\", \"),\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      ...extraHeaders\n    };\n    if (basicAuth !== void 0) {\n      headers[\"Authorization\"] = \"Basic \" + basicAuth;\n    }\n    this._appendExtraHeaders(headers);\n    let response;\n    try {\n      logger2.debug(\"url:\", url);\n      response = await this.fetchWithTimeout(url, { method: \"POST\", headers, body, timeoutInSeconds, credentials: initCredentials });\n    } catch (err) {\n      logger2.error(\"Network error\");\n      throw err;\n    }\n    logger2.debug(\"HTTP response received, status\", response.status);\n    const contentType = response.headers.get(\"Content-Type\");\n    if (contentType && !this._contentTypes.find((item) => contentType.startsWith(item))) {\n      throw new Error(`Invalid response Content-Type: ${contentType != null ? contentType : \"undefined\"}, from URL: ${url}`);\n    }\n    const responseText = await response.text();\n    let json = {};\n    if (responseText) {\n      try {\n        json = JSON.parse(responseText);\n      } catch (err) {\n        logger2.error(\"Error parsing JSON response\", err);\n        if (response.ok) throw err;\n        throw new Error(`${response.statusText} (${response.status})`);\n      }\n    }\n    if (!response.ok) {\n      logger2.error(\"Error from server:\", json);\n      if (response.headers.has(\"dpop-nonce\")) {\n        const nonce = response.headers.get(\"dpop-nonce\");\n        throw new ErrorDPoPNonce(nonce, `${JSON.stringify(json)}`);\n      }\n      if (json.error) {\n        throw new ErrorResponse(json, body);\n      }\n      throw new Error(`${response.statusText} (${response.status}): ${JSON.stringify(json)}`);\n    }\n    return json;\n  }\n  _appendExtraHeaders(headers) {\n    const logger2 = this._logger.create(\"appendExtraHeaders\");\n    const customKeys = Object.keys(this._extraHeaders);\n    const protectedHeaders = [\n      \"accept\",\n      \"content-type\"\n    ];\n    const preventOverride = [\n      \"authorization\"\n    ];\n    if (customKeys.length === 0) {\n      return;\n    }\n    customKeys.forEach((headerName) => {\n      if (protectedHeaders.includes(headerName.toLocaleLowerCase())) {\n        logger2.warn(\"Protected header could not be set\", headerName, protectedHeaders);\n        return;\n      }\n      if (preventOverride.includes(headerName.toLocaleLowerCase()) && Object.keys(headers).includes(headerName)) {\n        logger2.warn(\"Header could not be overridden\", headerName, preventOverride);\n        return;\n      }\n      const content = typeof this._extraHeaders[headerName] === \"function\" ? this._extraHeaders[headerName]() : this._extraHeaders[headerName];\n      if (content && content !== \"\") {\n        headers[headerName] = content;\n      }\n    });\n  }\n};\n\n// src/MetadataService.ts\nvar MetadataService = class {\n  constructor(_settings) {\n    this._settings = _settings;\n    this._logger = new Logger(\"MetadataService\");\n    this._signingKeys = null;\n    this._metadata = null;\n    this._metadataUrl = this._settings.metadataUrl;\n    this._jsonService = new JsonService(\n      [\"application/jwk-set+json\"],\n      null,\n      this._settings.extraHeaders\n    );\n    if (this._settings.signingKeys) {\n      this._logger.debug(\"using signingKeys from settings\");\n      this._signingKeys = this._settings.signingKeys;\n    }\n    if (this._settings.metadata) {\n      this._logger.debug(\"using metadata from settings\");\n      this._metadata = this._settings.metadata;\n    }\n    if (this._settings.fetchRequestCredentials) {\n      this._logger.debug(\"using fetchRequestCredentials from settings\");\n      this._fetchRequestCredentials = this._settings.fetchRequestCredentials;\n    }\n  }\n  resetSigningKeys() {\n    this._signingKeys = null;\n  }\n  async getMetadata() {\n    const logger2 = this._logger.create(\"getMetadata\");\n    if (this._metadata) {\n      logger2.debug(\"using cached values\");\n      return this._metadata;\n    }\n    if (!this._metadataUrl) {\n      logger2.throw(new Error(\"No authority or metadataUrl configured on settings\"));\n      throw null;\n    }\n    logger2.debug(\"getting metadata from\", this._metadataUrl);\n    const metadata = await this._jsonService.getJson(this._metadataUrl, { credentials: this._fetchRequestCredentials, timeoutInSeconds: this._settings.requestTimeoutInSeconds });\n    logger2.debug(\"merging remote JSON with seed metadata\");\n    this._metadata = Object.assign({}, metadata, this._settings.metadataSeed);\n    return this._metadata;\n  }\n  getIssuer() {\n    return this._getMetadataProperty(\"issuer\");\n  }\n  getAuthorizationEndpoint() {\n    return this._getMetadataProperty(\"authorization_endpoint\");\n  }\n  getUserInfoEndpoint() {\n    return this._getMetadataProperty(\"userinfo_endpoint\");\n  }\n  getTokenEndpoint(optional = true) {\n    return this._getMetadataProperty(\"token_endpoint\", optional);\n  }\n  getCheckSessionIframe() {\n    return this._getMetadataProperty(\"check_session_iframe\", true);\n  }\n  getEndSessionEndpoint() {\n    return this._getMetadataProperty(\"end_session_endpoint\", true);\n  }\n  getRevocationEndpoint(optional = true) {\n    return this._getMetadataProperty(\"revocation_endpoint\", optional);\n  }\n  getKeysEndpoint(optional = true) {\n    return this._getMetadataProperty(\"jwks_uri\", optional);\n  }\n  async _getMetadataProperty(name, optional = false) {\n    const logger2 = this._logger.create(`_getMetadataProperty('${name}')`);\n    const metadata = await this.getMetadata();\n    logger2.debug(\"resolved\");\n    if (metadata[name] === void 0) {\n      if (optional === true) {\n        logger2.warn(\"Metadata does not contain optional property\");\n        return void 0;\n      }\n      logger2.throw(new Error(\"Metadata does not contain property \" + name));\n    }\n    return metadata[name];\n  }\n  async getSigningKeys() {\n    const logger2 = this._logger.create(\"getSigningKeys\");\n    if (this._signingKeys) {\n      logger2.debug(\"returning signingKeys from cache\");\n      return this._signingKeys;\n    }\n    const jwks_uri = await this.getKeysEndpoint(false);\n    logger2.debug(\"got jwks_uri\", jwks_uri);\n    const keySet = await this._jsonService.getJson(jwks_uri, { timeoutInSeconds: this._settings.requestTimeoutInSeconds });\n    logger2.debug(\"got key set\", keySet);\n    if (!Array.isArray(keySet.keys)) {\n      logger2.throw(new Error(\"Missing keys on keyset\"));\n      throw null;\n    }\n    this._signingKeys = keySet.keys;\n    return this._signingKeys;\n  }\n};\n\n// src/WebStorageStateStore.ts\nvar WebStorageStateStore = class {\n  constructor({\n    prefix = \"oidc.\",\n    store = localStorage\n  } = {}) {\n    this._logger = new Logger(\"WebStorageStateStore\");\n    this._store = store;\n    this._prefix = prefix;\n  }\n  async set(key, value) {\n    this._logger.create(`set('${key}')`);\n    key = this._prefix + key;\n    await this._store.setItem(key, value);\n  }\n  async get(key) {\n    this._logger.create(`get('${key}')`);\n    key = this._prefix + key;\n    const item = await this._store.getItem(key);\n    return item;\n  }\n  async remove(key) {\n    this._logger.create(`remove('${key}')`);\n    key = this._prefix + key;\n    const item = await this._store.getItem(key);\n    await this._store.removeItem(key);\n    return item;\n  }\n  async getAllKeys() {\n    this._logger.create(\"getAllKeys\");\n    const len = await this._store.length;\n    const keys = [];\n    for (let index = 0; index < len; index++) {\n      const key = await this._store.key(index);\n      if (key && key.indexOf(this._prefix) === 0) {\n        keys.push(key.substr(this._prefix.length));\n      }\n    }\n    return keys;\n  }\n};\n\n// src/OidcClientSettings.ts\nvar DefaultResponseType = \"code\";\nvar DefaultScope = \"openid\";\nvar DefaultClientAuthentication = \"client_secret_post\";\nvar DefaultStaleStateAgeInSeconds = 60 * 15;\nvar OidcClientSettingsStore = class {\n  constructor({\n    // metadata related\n    authority,\n    metadataUrl,\n    metadata,\n    signingKeys,\n    metadataSeed,\n    // client related\n    client_id,\n    client_secret,\n    response_type = DefaultResponseType,\n    scope = DefaultScope,\n    redirect_uri,\n    post_logout_redirect_uri,\n    client_authentication = DefaultClientAuthentication,\n    // optional protocol\n    prompt,\n    display,\n    max_age,\n    ui_locales,\n    acr_values,\n    resource,\n    response_mode,\n    // behavior flags\n    filterProtocolClaims = true,\n    loadUserInfo = false,\n    requestTimeoutInSeconds,\n    staleStateAgeInSeconds = DefaultStaleStateAgeInSeconds,\n    mergeClaimsStrategy = { array: \"replace\" },\n    disablePKCE = false,\n    // other behavior\n    stateStore,\n    revokeTokenAdditionalContentTypes,\n    fetchRequestCredentials,\n    refreshTokenAllowedScope,\n    // extra\n    extraQueryParams = {},\n    extraTokenParams = {},\n    extraHeaders = {},\n    dpop,\n    omitScopeWhenRequesting = false\n  }) {\n    var _a;\n    this.authority = authority;\n    if (metadataUrl) {\n      this.metadataUrl = metadataUrl;\n    } else {\n      this.metadataUrl = authority;\n      if (authority) {\n        if (!this.metadataUrl.endsWith(\"/\")) {\n          this.metadataUrl += \"/\";\n        }\n        this.metadataUrl += \".well-known/openid-configuration\";\n      }\n    }\n    this.metadata = metadata;\n    this.metadataSeed = metadataSeed;\n    this.signingKeys = signingKeys;\n    this.client_id = client_id;\n    this.client_secret = client_secret;\n    this.response_type = response_type;\n    this.scope = scope;\n    this.redirect_uri = redirect_uri;\n    this.post_logout_redirect_uri = post_logout_redirect_uri;\n    this.client_authentication = client_authentication;\n    this.prompt = prompt;\n    this.display = display;\n    this.max_age = max_age;\n    this.ui_locales = ui_locales;\n    this.acr_values = acr_values;\n    this.resource = resource;\n    this.response_mode = response_mode;\n    this.filterProtocolClaims = filterProtocolClaims != null ? filterProtocolClaims : true;\n    this.loadUserInfo = !!loadUserInfo;\n    this.staleStateAgeInSeconds = staleStateAgeInSeconds;\n    this.mergeClaimsStrategy = mergeClaimsStrategy;\n    this.omitScopeWhenRequesting = omitScopeWhenRequesting;\n    this.disablePKCE = !!disablePKCE;\n    this.revokeTokenAdditionalContentTypes = revokeTokenAdditionalContentTypes;\n    this.fetchRequestCredentials = fetchRequestCredentials ? fetchRequestCredentials : \"same-origin\";\n    this.requestTimeoutInSeconds = requestTimeoutInSeconds;\n    if (stateStore) {\n      this.stateStore = stateStore;\n    } else {\n      const store = typeof window !== \"undefined\" ? window.localStorage : new InMemoryWebStorage();\n      this.stateStore = new WebStorageStateStore({ store });\n    }\n    this.refreshTokenAllowedScope = refreshTokenAllowedScope;\n    this.extraQueryParams = extraQueryParams;\n    this.extraTokenParams = extraTokenParams;\n    this.extraHeaders = extraHeaders;\n    this.dpop = dpop;\n    if (this.dpop && !((_a = this.dpop) == null ? void 0 : _a.store)) {\n      throw new Error(\"A DPoPStore is required when dpop is enabled\");\n    }\n  }\n};\n\n// src/UserInfoService.ts\nvar UserInfoService = class {\n  constructor(_settings, _metadataService) {\n    this._settings = _settings;\n    this._metadataService = _metadataService;\n    this._logger = new Logger(\"UserInfoService\");\n    this._getClaimsFromJwt = async (responseText) => {\n      const logger2 = this._logger.create(\"_getClaimsFromJwt\");\n      try {\n        const payload = JwtUtils.decode(responseText);\n        logger2.debug(\"JWT decoding successful\");\n        return payload;\n      } catch (err) {\n        logger2.error(\"Error parsing JWT response\");\n        throw err;\n      }\n    };\n    this._jsonService = new JsonService(\n      void 0,\n      this._getClaimsFromJwt,\n      this._settings.extraHeaders\n    );\n  }\n  async getClaims(token) {\n    const logger2 = this._logger.create(\"getClaims\");\n    if (!token) {\n      this._logger.throw(new Error(\"No token passed\"));\n    }\n    const url = await this._metadataService.getUserInfoEndpoint();\n    logger2.debug(\"got userinfo url\", url);\n    const claims = await this._jsonService.getJson(url, {\n      token,\n      credentials: this._settings.fetchRequestCredentials,\n      timeoutInSeconds: this._settings.requestTimeoutInSeconds\n    });\n    logger2.debug(\"got claims\", claims);\n    return claims;\n  }\n};\n\n// src/TokenClient.ts\nvar TokenClient = class {\n  constructor(_settings, _metadataService) {\n    this._settings = _settings;\n    this._metadataService = _metadataService;\n    this._logger = new Logger(\"TokenClient\");\n    this._jsonService = new JsonService(\n      this._settings.revokeTokenAdditionalContentTypes,\n      null,\n      this._settings.extraHeaders\n    );\n  }\n  /**\n   * Exchange code.\n   *\n   * @see https://www.rfc-editor.org/rfc/rfc6749#section-4.1.3\n   */\n  async exchangeCode({\n    grant_type = \"authorization_code\",\n    redirect_uri = this._settings.redirect_uri,\n    client_id = this._settings.client_id,\n    client_secret = this._settings.client_secret,\n    extraHeaders,\n    ...args\n  }) {\n    const logger2 = this._logger.create(\"exchangeCode\");\n    if (!client_id) {\n      logger2.throw(new Error(\"A client_id is required\"));\n    }\n    if (!redirect_uri) {\n      logger2.throw(new Error(\"A redirect_uri is required\"));\n    }\n    if (!args.code) {\n      logger2.throw(new Error(\"A code is required\"));\n    }\n    const params = new URLSearchParams({ grant_type, redirect_uri });\n    for (const [key, value] of Object.entries(args)) {\n      if (value != null) {\n        params.set(key, value);\n      }\n    }\n    let basicAuth;\n    switch (this._settings.client_authentication) {\n      case \"client_secret_basic\":\n        if (client_secret === void 0 || client_secret === null) {\n          logger2.throw(new Error(\"A client_secret is required\"));\n          throw null;\n        }\n        basicAuth = CryptoUtils.generateBasicAuth(client_id, client_secret);\n        break;\n      case \"client_secret_post\":\n        params.append(\"client_id\", client_id);\n        if (client_secret) {\n          params.append(\"client_secret\", client_secret);\n        }\n        break;\n    }\n    const url = await this._metadataService.getTokenEndpoint(false);\n    logger2.debug(\"got token endpoint\");\n    const response = await this._jsonService.postForm(url, {\n      body: params,\n      basicAuth,\n      timeoutInSeconds: this._settings.requestTimeoutInSeconds,\n      initCredentials: this._settings.fetchRequestCredentials,\n      extraHeaders\n    });\n    logger2.debug(\"got response\");\n    return response;\n  }\n  /**\n   * Exchange credentials.\n   *\n   * @see https://www.rfc-editor.org/rfc/rfc6749#section-4.3.2\n   */\n  async exchangeCredentials({\n    grant_type = \"password\",\n    client_id = this._settings.client_id,\n    client_secret = this._settings.client_secret,\n    scope = this._settings.scope,\n    ...args\n  }) {\n    const logger2 = this._logger.create(\"exchangeCredentials\");\n    if (!client_id) {\n      logger2.throw(new Error(\"A client_id is required\"));\n    }\n    const params = new URLSearchParams({ grant_type });\n    if (!this._settings.omitScopeWhenRequesting) {\n      params.set(\"scope\", scope);\n    }\n    for (const [key, value] of Object.entries(args)) {\n      if (value != null) {\n        params.set(key, value);\n      }\n    }\n    let basicAuth;\n    switch (this._settings.client_authentication) {\n      case \"client_secret_basic\":\n        if (client_secret === void 0 || client_secret === null) {\n          logger2.throw(new Error(\"A client_secret is required\"));\n          throw null;\n        }\n        basicAuth = CryptoUtils.generateBasicAuth(client_id, client_secret);\n        break;\n      case \"client_secret_post\":\n        params.append(\"client_id\", client_id);\n        if (client_secret) {\n          params.append(\"client_secret\", client_secret);\n        }\n        break;\n    }\n    const url = await this._metadataService.getTokenEndpoint(false);\n    logger2.debug(\"got token endpoint\");\n    const response = await this._jsonService.postForm(url, { body: params, basicAuth, timeoutInSeconds: this._settings.requestTimeoutInSeconds, initCredentials: this._settings.fetchRequestCredentials });\n    logger2.debug(\"got response\");\n    return response;\n  }\n  /**\n   * Exchange a refresh token.\n   *\n   * @see https://www.rfc-editor.org/rfc/rfc6749#section-6\n   */\n  async exchangeRefreshToken({\n    grant_type = \"refresh_token\",\n    client_id = this._settings.client_id,\n    client_secret = this._settings.client_secret,\n    timeoutInSeconds,\n    extraHeaders,\n    ...args\n  }) {\n    const logger2 = this._logger.create(\"exchangeRefreshToken\");\n    if (!client_id) {\n      logger2.throw(new Error(\"A client_id is required\"));\n    }\n    if (!args.refresh_token) {\n      logger2.throw(new Error(\"A refresh_token is required\"));\n    }\n    const params = new URLSearchParams({ grant_type });\n    for (const [key, value] of Object.entries(args)) {\n      if (Array.isArray(value)) {\n        value.forEach((param) => params.append(key, param));\n      } else if (value != null) {\n        params.set(key, value);\n      }\n    }\n    let basicAuth;\n    switch (this._settings.client_authentication) {\n      case \"client_secret_basic\":\n        if (client_secret === void 0 || client_secret === null) {\n          logger2.throw(new Error(\"A client_secret is required\"));\n          throw null;\n        }\n        basicAuth = CryptoUtils.generateBasicAuth(client_id, client_secret);\n        break;\n      case \"client_secret_post\":\n        params.append(\"client_id\", client_id);\n        if (client_secret) {\n          params.append(\"client_secret\", client_secret);\n        }\n        break;\n    }\n    const url = await this._metadataService.getTokenEndpoint(false);\n    logger2.debug(\"got token endpoint\");\n    const response = await this._jsonService.postForm(url, { body: params, basicAuth, timeoutInSeconds, initCredentials: this._settings.fetchRequestCredentials, extraHeaders });\n    logger2.debug(\"got response\");\n    return response;\n  }\n  /**\n   * Revoke an access or refresh token.\n   *\n   * @see https://datatracker.ietf.org/doc/html/rfc7009#section-2.1\n   */\n  async revoke(args) {\n    var _a;\n    const logger2 = this._logger.create(\"revoke\");\n    if (!args.token) {\n      logger2.throw(new Error(\"A token is required\"));\n    }\n    const url = await this._metadataService.getRevocationEndpoint(false);\n    logger2.debug(`got revocation endpoint, revoking ${(_a = args.token_type_hint) != null ? _a : \"default token type\"}`);\n    const params = new URLSearchParams();\n    for (const [key, value] of Object.entries(args)) {\n      if (value != null) {\n        params.set(key, value);\n      }\n    }\n    params.set(\"client_id\", this._settings.client_id);\n    if (this._settings.client_secret) {\n      params.set(\"client_secret\", this._settings.client_secret);\n    }\n    await this._jsonService.postForm(url, { body: params, timeoutInSeconds: this._settings.requestTimeoutInSeconds });\n    logger2.debug(\"got response\");\n  }\n};\n\n// src/ResponseValidator.ts\nvar ResponseValidator = class {\n  constructor(_settings, _metadataService, _claimsService) {\n    this._settings = _settings;\n    this._metadataService = _metadataService;\n    this._claimsService = _claimsService;\n    this._logger = new Logger(\"ResponseValidator\");\n    this._userInfoService = new UserInfoService(this._settings, this._metadataService);\n    this._tokenClient = new TokenClient(this._settings, this._metadataService);\n  }\n  async validateSigninResponse(response, state, extraHeaders) {\n    const logger2 = this._logger.create(\"validateSigninResponse\");\n    this._processSigninState(response, state);\n    logger2.debug(\"state processed\");\n    await this._processCode(response, state, extraHeaders);\n    logger2.debug(\"code processed\");\n    if (response.isOpenId) {\n      this._validateIdTokenAttributes(response);\n    }\n    logger2.debug(\"tokens validated\");\n    await this._processClaims(response, state == null ? void 0 : state.skipUserInfo, response.isOpenId);\n    logger2.debug(\"claims processed\");\n  }\n  async validateCredentialsResponse(response, skipUserInfo) {\n    const logger2 = this._logger.create(\"validateCredentialsResponse\");\n    if (response.isOpenId && !!response.id_token) {\n      this._validateIdTokenAttributes(response);\n    }\n    logger2.debug(\"tokens validated\");\n    await this._processClaims(response, skipUserInfo, response.isOpenId);\n    logger2.debug(\"claims processed\");\n  }\n  async validateRefreshResponse(response, state) {\n    var _a, _b;\n    const logger2 = this._logger.create(\"validateRefreshResponse\");\n    response.userState = state.data;\n    (_a = response.session_state) != null ? _a : response.session_state = state.session_state;\n    (_b = response.scope) != null ? _b : response.scope = state.scope;\n    if (response.isOpenId && !!response.id_token) {\n      this._validateIdTokenAttributes(response, state.id_token);\n      logger2.debug(\"ID Token validated\");\n    }\n    if (!response.id_token) {\n      response.id_token = state.id_token;\n      response.profile = state.profile;\n    }\n    const hasIdToken = response.isOpenId && !!response.id_token;\n    await this._processClaims(response, false, hasIdToken);\n    logger2.debug(\"claims processed\");\n  }\n  validateSignoutResponse(response, state) {\n    const logger2 = this._logger.create(\"validateSignoutResponse\");\n    if (state.id !== response.state) {\n      logger2.throw(new Error(\"State does not match\"));\n    }\n    logger2.debug(\"state validated\");\n    response.userState = state.data;\n    if (response.error) {\n      logger2.warn(\"Response was error\", response.error);\n      throw new ErrorResponse(response);\n    }\n  }\n  _processSigninState(response, state) {\n    var _a;\n    const logger2 = this._logger.create(\"_processSigninState\");\n    if (state.id !== response.state) {\n      logger2.throw(new Error(\"State does not match\"));\n    }\n    if (!state.client_id) {\n      logger2.throw(new Error(\"No client_id on state\"));\n    }\n    if (!state.authority) {\n      logger2.throw(new Error(\"No authority on state\"));\n    }\n    if (this._settings.authority !== state.authority) {\n      logger2.throw(new Error(\"authority mismatch on settings vs. signin state\"));\n    }\n    if (this._settings.client_id && this._settings.client_id !== state.client_id) {\n      logger2.throw(new Error(\"client_id mismatch on settings vs. signin state\"));\n    }\n    logger2.debug(\"state validated\");\n    response.userState = state.data;\n    response.url_state = state.url_state;\n    (_a = response.scope) != null ? _a : response.scope = state.scope;\n    if (response.error) {\n      logger2.warn(\"Response was error\", response.error);\n      throw new ErrorResponse(response);\n    }\n    if (state.code_verifier && !response.code) {\n      logger2.throw(new Error(\"Expected code in response\"));\n    }\n  }\n  async _processClaims(response, skipUserInfo = false, validateSub = true) {\n    const logger2 = this._logger.create(\"_processClaims\");\n    response.profile = this._claimsService.filterProtocolClaims(response.profile);\n    if (skipUserInfo || !this._settings.loadUserInfo || !response.access_token) {\n      logger2.debug(\"not loading user info\");\n      return;\n    }\n    logger2.debug(\"loading user info\");\n    const claims = await this._userInfoService.getClaims(response.access_token);\n    logger2.debug(\"user info claims received from user info endpoint\");\n    if (validateSub && claims.sub !== response.profile.sub) {\n      logger2.throw(new Error(\"subject from UserInfo response does not match subject in ID Token\"));\n    }\n    response.profile = this._claimsService.mergeClaims(response.profile, this._claimsService.filterProtocolClaims(claims));\n    logger2.debug(\"user info claims received, updated profile:\", response.profile);\n  }\n  async _processCode(response, state, extraHeaders) {\n    const logger2 = this._logger.create(\"_processCode\");\n    if (response.code) {\n      logger2.debug(\"Validating code\");\n      const tokenResponse = await this._tokenClient.exchangeCode({\n        client_id: state.client_id,\n        client_secret: state.client_secret,\n        code: response.code,\n        redirect_uri: state.redirect_uri,\n        code_verifier: state.code_verifier,\n        extraHeaders,\n        ...state.extraTokenParams\n      });\n      Object.assign(response, tokenResponse);\n    } else {\n      logger2.debug(\"No code to process\");\n    }\n  }\n  _validateIdTokenAttributes(response, existingToken) {\n    var _a;\n    const logger2 = this._logger.create(\"_validateIdTokenAttributes\");\n    logger2.debug(\"decoding ID Token JWT\");\n    const incoming = JwtUtils.decode((_a = response.id_token) != null ? _a : \"\");\n    if (!incoming.sub) {\n      logger2.throw(new Error(\"ID Token is missing a subject claim\"));\n    }\n    if (existingToken) {\n      const existing = JwtUtils.decode(existingToken);\n      if (incoming.sub !== existing.sub) {\n        logger2.throw(new Error(\"sub in id_token does not match current sub\"));\n      }\n      if (incoming.auth_time && incoming.auth_time !== existing.auth_time) {\n        logger2.throw(new Error(\"auth_time in id_token does not match original auth_time\"));\n      }\n      if (incoming.azp && incoming.azp !== existing.azp) {\n        logger2.throw(new Error(\"azp in id_token does not match original azp\"));\n      }\n      if (!incoming.azp && existing.azp) {\n        logger2.throw(new Error(\"azp not in id_token, but present in original id_token\"));\n      }\n    }\n    response.profile = incoming;\n  }\n};\n\n// src/State.ts\nvar State = class _State {\n  constructor(args) {\n    this.id = args.id || CryptoUtils.generateUUIDv4();\n    this.data = args.data;\n    if (args.created && args.created > 0) {\n      this.created = args.created;\n    } else {\n      this.created = Timer.getEpochTime();\n    }\n    this.request_type = args.request_type;\n    this.url_state = args.url_state;\n  }\n  toStorageString() {\n    new Logger(\"State\").create(\"toStorageString\");\n    return JSON.stringify({\n      id: this.id,\n      data: this.data,\n      created: this.created,\n      request_type: this.request_type,\n      url_state: this.url_state\n    });\n  }\n  static fromStorageString(storageString) {\n    Logger.createStatic(\"State\", \"fromStorageString\");\n    return Promise.resolve(new _State(JSON.parse(storageString)));\n  }\n  static async clearStaleState(storage, age) {\n    const logger2 = Logger.createStatic(\"State\", \"clearStaleState\");\n    const cutoff = Timer.getEpochTime() - age;\n    const keys = await storage.getAllKeys();\n    logger2.debug(\"got keys\", keys);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      const item = await storage.get(key);\n      let remove = false;\n      if (item) {\n        try {\n          const state = await _State.fromStorageString(item);\n          logger2.debug(\"got item from key:\", key, state.created);\n          if (state.created <= cutoff) {\n            remove = true;\n          }\n        } catch (err) {\n          logger2.error(\"Error parsing state for key:\", key, err);\n          remove = true;\n        }\n      } else {\n        logger2.debug(\"no item in storage for key:\", key);\n        remove = true;\n      }\n      if (remove) {\n        logger2.debug(\"removed item for key:\", key);\n        void storage.remove(key);\n      }\n    }\n  }\n};\n\n// src/SigninState.ts\nvar SigninState = class _SigninState extends State {\n  constructor(args) {\n    super(args);\n    this.code_verifier = args.code_verifier;\n    this.code_challenge = args.code_challenge;\n    this.authority = args.authority;\n    this.client_id = args.client_id;\n    this.redirect_uri = args.redirect_uri;\n    this.scope = args.scope;\n    this.client_secret = args.client_secret;\n    this.extraTokenParams = args.extraTokenParams;\n    this.response_mode = args.response_mode;\n    this.skipUserInfo = args.skipUserInfo;\n  }\n  static async create(args) {\n    const code_verifier = args.code_verifier === true ? CryptoUtils.generateCodeVerifier() : args.code_verifier || void 0;\n    const code_challenge = code_verifier ? await CryptoUtils.generateCodeChallenge(code_verifier) : void 0;\n    return new _SigninState({\n      ...args,\n      code_verifier,\n      code_challenge\n    });\n  }\n  toStorageString() {\n    new Logger(\"SigninState\").create(\"toStorageString\");\n    return JSON.stringify({\n      id: this.id,\n      data: this.data,\n      created: this.created,\n      request_type: this.request_type,\n      url_state: this.url_state,\n      code_verifier: this.code_verifier,\n      authority: this.authority,\n      client_id: this.client_id,\n      redirect_uri: this.redirect_uri,\n      scope: this.scope,\n      client_secret: this.client_secret,\n      extraTokenParams: this.extraTokenParams,\n      response_mode: this.response_mode,\n      skipUserInfo: this.skipUserInfo\n    });\n  }\n  static fromStorageString(storageString) {\n    Logger.createStatic(\"SigninState\", \"fromStorageString\");\n    const data = JSON.parse(storageString);\n    return _SigninState.create(data);\n  }\n};\n\n// src/SigninRequest.ts\nvar _SigninRequest = class _SigninRequest {\n  constructor(args) {\n    this.url = args.url;\n    this.state = args.state;\n  }\n  static async create({\n    // mandatory\n    url,\n    authority,\n    client_id,\n    redirect_uri,\n    response_type,\n    scope,\n    // optional\n    state_data,\n    response_mode,\n    request_type,\n    client_secret,\n    nonce,\n    url_state,\n    resource,\n    skipUserInfo,\n    extraQueryParams,\n    extraTokenParams,\n    disablePKCE,\n    dpopJkt,\n    omitScopeWhenRequesting,\n    ...optionalParams\n  }) {\n    if (!url) {\n      this._logger.error(\"create: No url passed\");\n      throw new Error(\"url\");\n    }\n    if (!client_id) {\n      this._logger.error(\"create: No client_id passed\");\n      throw new Error(\"client_id\");\n    }\n    if (!redirect_uri) {\n      this._logger.error(\"create: No redirect_uri passed\");\n      throw new Error(\"redirect_uri\");\n    }\n    if (!response_type) {\n      this._logger.error(\"create: No response_type passed\");\n      throw new Error(\"response_type\");\n    }\n    if (!scope) {\n      this._logger.error(\"create: No scope passed\");\n      throw new Error(\"scope\");\n    }\n    if (!authority) {\n      this._logger.error(\"create: No authority passed\");\n      throw new Error(\"authority\");\n    }\n    const state = await SigninState.create({\n      data: state_data,\n      request_type,\n      url_state,\n      code_verifier: !disablePKCE,\n      client_id,\n      authority,\n      redirect_uri,\n      response_mode,\n      client_secret,\n      scope,\n      extraTokenParams,\n      skipUserInfo\n    });\n    const parsedUrl = new URL(url);\n    parsedUrl.searchParams.append(\"client_id\", client_id);\n    parsedUrl.searchParams.append(\"redirect_uri\", redirect_uri);\n    parsedUrl.searchParams.append(\"response_type\", response_type);\n    if (!omitScopeWhenRequesting) {\n      parsedUrl.searchParams.append(\"scope\", scope);\n    }\n    if (nonce) {\n      parsedUrl.searchParams.append(\"nonce\", nonce);\n    }\n    if (dpopJkt) {\n      parsedUrl.searchParams.append(\"dpop_jkt\", dpopJkt);\n    }\n    let stateParam = state.id;\n    if (url_state) {\n      stateParam = `${stateParam}${URL_STATE_DELIMITER}${url_state}`;\n    }\n    parsedUrl.searchParams.append(\"state\", stateParam);\n    if (state.code_challenge) {\n      parsedUrl.searchParams.append(\"code_challenge\", state.code_challenge);\n      parsedUrl.searchParams.append(\"code_challenge_method\", \"S256\");\n    }\n    if (resource) {\n      const resources = Array.isArray(resource) ? resource : [resource];\n      resources.forEach((r) => parsedUrl.searchParams.append(\"resource\", r));\n    }\n    for (const [key, value] of Object.entries({ response_mode, ...optionalParams, ...extraQueryParams })) {\n      if (value != null) {\n        parsedUrl.searchParams.append(key, value.toString());\n      }\n    }\n    return new _SigninRequest({\n      url: parsedUrl.href,\n      state\n    });\n  }\n};\n_SigninRequest._logger = new Logger(\"SigninRequest\");\nvar SigninRequest = _SigninRequest;\n\n// src/SigninResponse.ts\nvar OidcScope = \"openid\";\nvar SigninResponse = class {\n  constructor(params) {\n    /** @see {@link User.access_token} */\n    this.access_token = \"\";\n    /** @see {@link User.token_type} */\n    this.token_type = \"\";\n    /** @see {@link User.profile} */\n    this.profile = {};\n    this.state = params.get(\"state\");\n    this.session_state = params.get(\"session_state\");\n    if (this.state) {\n      const splitState = decodeURIComponent(this.state).split(URL_STATE_DELIMITER);\n      this.state = splitState[0];\n      if (splitState.length > 1) {\n        this.url_state = splitState.slice(1).join(URL_STATE_DELIMITER);\n      }\n    }\n    this.error = params.get(\"error\");\n    this.error_description = params.get(\"error_description\");\n    this.error_uri = params.get(\"error_uri\");\n    this.code = params.get(\"code\");\n  }\n  get expires_in() {\n    if (this.expires_at === void 0) {\n      return void 0;\n    }\n    return this.expires_at - Timer.getEpochTime();\n  }\n  set expires_in(value) {\n    if (typeof value === \"string\") value = Number(value);\n    if (value !== void 0 && value >= 0) {\n      this.expires_at = Math.floor(value) + Timer.getEpochTime();\n    }\n  }\n  get isOpenId() {\n    var _a;\n    return ((_a = this.scope) == null ? void 0 : _a.split(\" \").includes(OidcScope)) || !!this.id_token;\n  }\n};\n\n// src/SignoutRequest.ts\nvar SignoutRequest = class {\n  constructor({\n    url,\n    state_data,\n    id_token_hint,\n    post_logout_redirect_uri,\n    extraQueryParams,\n    request_type,\n    client_id,\n    url_state\n  }) {\n    this._logger = new Logger(\"SignoutRequest\");\n    if (!url) {\n      this._logger.error(\"ctor: No url passed\");\n      throw new Error(\"url\");\n    }\n    const parsedUrl = new URL(url);\n    if (id_token_hint) {\n      parsedUrl.searchParams.append(\"id_token_hint\", id_token_hint);\n    }\n    if (client_id) {\n      parsedUrl.searchParams.append(\"client_id\", client_id);\n    }\n    if (post_logout_redirect_uri) {\n      parsedUrl.searchParams.append(\"post_logout_redirect_uri\", post_logout_redirect_uri);\n      if (state_data || url_state) {\n        this.state = new State({ data: state_data, request_type, url_state });\n        let stateParam = this.state.id;\n        if (url_state) {\n          stateParam = `${stateParam}${URL_STATE_DELIMITER}${url_state}`;\n        }\n        parsedUrl.searchParams.append(\"state\", stateParam);\n      }\n    }\n    for (const [key, value] of Object.entries({ ...extraQueryParams })) {\n      if (value != null) {\n        parsedUrl.searchParams.append(key, value.toString());\n      }\n    }\n    this.url = parsedUrl.href;\n  }\n};\n\n// src/SignoutResponse.ts\nvar SignoutResponse = class {\n  constructor(params) {\n    this.state = params.get(\"state\");\n    if (this.state) {\n      const splitState = decodeURIComponent(this.state).split(URL_STATE_DELIMITER);\n      this.state = splitState[0];\n      if (splitState.length > 1) {\n        this.url_state = splitState.slice(1).join(URL_STATE_DELIMITER);\n      }\n    }\n    this.error = params.get(\"error\");\n    this.error_description = params.get(\"error_description\");\n    this.error_uri = params.get(\"error_uri\");\n  }\n};\n\n// src/ClaimsService.ts\nvar DefaultProtocolClaims = [\n  \"nbf\",\n  \"jti\",\n  \"auth_time\",\n  \"nonce\",\n  \"acr\",\n  \"amr\",\n  \"azp\",\n  \"at_hash\"\n  // https://openid.net/specs/openid-connect-core-1_0.html#CodeIDToken\n];\nvar InternalRequiredProtocolClaims = [\"sub\", \"iss\", \"aud\", \"exp\", \"iat\"];\nvar ClaimsService = class {\n  constructor(_settings) {\n    this._settings = _settings;\n    this._logger = new Logger(\"ClaimsService\");\n  }\n  filterProtocolClaims(claims) {\n    const result = { ...claims };\n    if (this._settings.filterProtocolClaims) {\n      let protocolClaims;\n      if (Array.isArray(this._settings.filterProtocolClaims)) {\n        protocolClaims = this._settings.filterProtocolClaims;\n      } else {\n        protocolClaims = DefaultProtocolClaims;\n      }\n      for (const claim of protocolClaims) {\n        if (!InternalRequiredProtocolClaims.includes(claim)) {\n          delete result[claim];\n        }\n      }\n    }\n    return result;\n  }\n  mergeClaims(claims1, claims2) {\n    const result = { ...claims1 };\n    for (const [claim, values] of Object.entries(claims2)) {\n      if (result[claim] !== values) {\n        if (Array.isArray(result[claim]) || Array.isArray(values)) {\n          if (this._settings.mergeClaimsStrategy.array == \"replace\") {\n            result[claim] = values;\n          } else {\n            const mergedValues = Array.isArray(result[claim]) ? result[claim] : [result[claim]];\n            for (const value of Array.isArray(values) ? values : [values]) {\n              if (!mergedValues.includes(value)) {\n                mergedValues.push(value);\n              }\n            }\n            result[claim] = mergedValues;\n          }\n        } else if (typeof result[claim] === \"object\" && typeof values === \"object\") {\n          result[claim] = this.mergeClaims(result[claim], values);\n        } else {\n          result[claim] = values;\n        }\n      }\n    }\n    return result;\n  }\n};\n\n// src/DPoPStore.ts\nvar DPoPState = class {\n  constructor(keys, nonce) {\n    this.keys = keys;\n    this.nonce = nonce;\n  }\n};\n\n// src/OidcClient.ts\nvar OidcClient = class {\n  constructor(settings, metadataService) {\n    this._logger = new Logger(\"OidcClient\");\n    this.settings = settings instanceof OidcClientSettingsStore ? settings : new OidcClientSettingsStore(settings);\n    this.metadataService = metadataService != null ? metadataService : new MetadataService(this.settings);\n    this._claimsService = new ClaimsService(this.settings);\n    this._validator = new ResponseValidator(this.settings, this.metadataService, this._claimsService);\n    this._tokenClient = new TokenClient(this.settings, this.metadataService);\n  }\n  async createSigninRequest({\n    state,\n    request,\n    request_uri,\n    request_type,\n    id_token_hint,\n    login_hint,\n    skipUserInfo,\n    nonce,\n    url_state,\n    response_type = this.settings.response_type,\n    scope = this.settings.scope,\n    redirect_uri = this.settings.redirect_uri,\n    prompt = this.settings.prompt,\n    display = this.settings.display,\n    max_age = this.settings.max_age,\n    ui_locales = this.settings.ui_locales,\n    acr_values = this.settings.acr_values,\n    resource = this.settings.resource,\n    response_mode = this.settings.response_mode,\n    extraQueryParams = this.settings.extraQueryParams,\n    extraTokenParams = this.settings.extraTokenParams,\n    dpopJkt,\n    omitScopeWhenRequesting = this.settings.omitScopeWhenRequesting\n  }) {\n    const logger2 = this._logger.create(\"createSigninRequest\");\n    if (response_type !== \"code\") {\n      throw new Error(\"Only the Authorization Code flow (with PKCE) is supported\");\n    }\n    const url = await this.metadataService.getAuthorizationEndpoint();\n    logger2.debug(\"Received authorization endpoint\", url);\n    const signinRequest = await SigninRequest.create({\n      url,\n      authority: this.settings.authority,\n      client_id: this.settings.client_id,\n      redirect_uri,\n      response_type,\n      scope,\n      state_data: state,\n      url_state,\n      prompt,\n      display,\n      max_age,\n      ui_locales,\n      id_token_hint,\n      login_hint,\n      acr_values,\n      dpopJkt,\n      resource,\n      request,\n      request_uri,\n      extraQueryParams,\n      extraTokenParams,\n      request_type,\n      response_mode,\n      client_secret: this.settings.client_secret,\n      skipUserInfo,\n      nonce,\n      disablePKCE: this.settings.disablePKCE,\n      omitScopeWhenRequesting\n    });\n    await this.clearStaleState();\n    const signinState = signinRequest.state;\n    await this.settings.stateStore.set(signinState.id, signinState.toStorageString());\n    return signinRequest;\n  }\n  async readSigninResponseState(url, removeState = false) {\n    const logger2 = this._logger.create(\"readSigninResponseState\");\n    const response = new SigninResponse(UrlUtils.readParams(url, this.settings.response_mode));\n    if (!response.state) {\n      logger2.throw(new Error(\"No state in response\"));\n      throw null;\n    }\n    const storedStateString = await this.settings.stateStore[removeState ? \"remove\" : \"get\"](response.state);\n    if (!storedStateString) {\n      logger2.throw(new Error(\"No matching state found in storage\"));\n      throw null;\n    }\n    const state = await SigninState.fromStorageString(storedStateString);\n    return { state, response };\n  }\n  async processSigninResponse(url, extraHeaders, removeState = true) {\n    const logger2 = this._logger.create(\"processSigninResponse\");\n    const { state, response } = await this.readSigninResponseState(url, removeState);\n    logger2.debug(\"received state from storage; validating response\");\n    if (this.settings.dpop && this.settings.dpop.store) {\n      const dpopProof = await this.getDpopProof(this.settings.dpop.store);\n      extraHeaders = { ...extraHeaders, \"DPoP\": dpopProof };\n    }\n    try {\n      await this._validator.validateSigninResponse(response, state, extraHeaders);\n    } catch (err) {\n      if (err instanceof ErrorDPoPNonce && this.settings.dpop) {\n        const dpopProof = await this.getDpopProof(this.settings.dpop.store, err.nonce);\n        extraHeaders[\"DPoP\"] = dpopProof;\n        await this._validator.validateSigninResponse(response, state, extraHeaders);\n      } else {\n        throw err;\n      }\n    }\n    return response;\n  }\n  async getDpopProof(dpopStore, nonce) {\n    let keyPair;\n    let dpopState;\n    if (!(await dpopStore.getAllKeys()).includes(this.settings.client_id)) {\n      keyPair = await CryptoUtils.generateDPoPKeys();\n      dpopState = new DPoPState(keyPair, nonce);\n      await dpopStore.set(this.settings.client_id, dpopState);\n    } else {\n      dpopState = await dpopStore.get(this.settings.client_id);\n      if (dpopState.nonce !== nonce && nonce) {\n        dpopState.nonce = nonce;\n        await dpopStore.set(this.settings.client_id, dpopState);\n      }\n    }\n    return await CryptoUtils.generateDPoPProof({\n      url: await this.metadataService.getTokenEndpoint(false),\n      httpMethod: \"POST\",\n      keyPair: dpopState.keys,\n      nonce: dpopState.nonce\n    });\n  }\n  async processResourceOwnerPasswordCredentials({\n    username,\n    password,\n    skipUserInfo = false,\n    extraTokenParams = {}\n  }) {\n    const tokenResponse = await this._tokenClient.exchangeCredentials({ username, password, ...extraTokenParams });\n    const signinResponse = new SigninResponse(new URLSearchParams());\n    Object.assign(signinResponse, tokenResponse);\n    await this._validator.validateCredentialsResponse(signinResponse, skipUserInfo);\n    return signinResponse;\n  }\n  async useRefreshToken({\n    state,\n    redirect_uri,\n    resource,\n    timeoutInSeconds,\n    extraHeaders,\n    extraTokenParams\n  }) {\n    var _a;\n    const logger2 = this._logger.create(\"useRefreshToken\");\n    let scope;\n    if (this.settings.refreshTokenAllowedScope === void 0) {\n      scope = state.scope;\n    } else {\n      const allowableScopes = this.settings.refreshTokenAllowedScope.split(\" \");\n      const providedScopes = ((_a = state.scope) == null ? void 0 : _a.split(\" \")) || [];\n      scope = providedScopes.filter((s) => allowableScopes.includes(s)).join(\" \");\n    }\n    if (this.settings.dpop && this.settings.dpop.store) {\n      const dpopProof = await this.getDpopProof(this.settings.dpop.store);\n      extraHeaders = { ...extraHeaders, \"DPoP\": dpopProof };\n    }\n    let result;\n    try {\n      result = await this._tokenClient.exchangeRefreshToken({\n        refresh_token: state.refresh_token,\n        // provide the (possible filtered) scope list\n        scope,\n        redirect_uri,\n        resource,\n        timeoutInSeconds,\n        extraHeaders,\n        ...extraTokenParams\n      });\n    } catch (err) {\n      if (err instanceof ErrorDPoPNonce && this.settings.dpop) {\n        extraHeaders[\"DPoP\"] = await this.getDpopProof(this.settings.dpop.store, err.nonce);\n        result = await this._tokenClient.exchangeRefreshToken({\n          refresh_token: state.refresh_token,\n          // provide the (possible filtered) scope list\n          scope,\n          redirect_uri,\n          resource,\n          timeoutInSeconds,\n          extraHeaders,\n          ...extraTokenParams\n        });\n      } else {\n        throw err;\n      }\n    }\n    const response = new SigninResponse(new URLSearchParams());\n    Object.assign(response, result);\n    logger2.debug(\"validating response\", response);\n    await this._validator.validateRefreshResponse(response, {\n      ...state,\n      // override the scope in the state handed over to the validator\n      // so it can set the granted scope to the requested scope in case none is included in the response\n      scope\n    });\n    return response;\n  }\n  async createSignoutRequest({\n    state,\n    id_token_hint,\n    client_id,\n    request_type,\n    url_state,\n    post_logout_redirect_uri = this.settings.post_logout_redirect_uri,\n    extraQueryParams = this.settings.extraQueryParams\n  } = {}) {\n    const logger2 = this._logger.create(\"createSignoutRequest\");\n    const url = await this.metadataService.getEndSessionEndpoint();\n    if (!url) {\n      logger2.throw(new Error(\"No end session endpoint\"));\n      throw null;\n    }\n    logger2.debug(\"Received end session endpoint\", url);\n    if (!client_id && post_logout_redirect_uri && !id_token_hint) {\n      client_id = this.settings.client_id;\n    }\n    const request = new SignoutRequest({\n      url,\n      id_token_hint,\n      client_id,\n      post_logout_redirect_uri,\n      state_data: state,\n      extraQueryParams,\n      request_type,\n      url_state\n    });\n    await this.clearStaleState();\n    const signoutState = request.state;\n    if (signoutState) {\n      logger2.debug(\"Signout request has state to persist\");\n      await this.settings.stateStore.set(signoutState.id, signoutState.toStorageString());\n    }\n    return request;\n  }\n  async readSignoutResponseState(url, removeState = false) {\n    const logger2 = this._logger.create(\"readSignoutResponseState\");\n    const response = new SignoutResponse(UrlUtils.readParams(url, this.settings.response_mode));\n    if (!response.state) {\n      logger2.debug(\"No state in response\");\n      if (response.error) {\n        logger2.warn(\"Response was error:\", response.error);\n        throw new ErrorResponse(response);\n      }\n      return { state: void 0, response };\n    }\n    const storedStateString = await this.settings.stateStore[removeState ? \"remove\" : \"get\"](response.state);\n    if (!storedStateString) {\n      logger2.throw(new Error(\"No matching state found in storage\"));\n      throw null;\n    }\n    const state = await State.fromStorageString(storedStateString);\n    return { state, response };\n  }\n  async processSignoutResponse(url) {\n    const logger2 = this._logger.create(\"processSignoutResponse\");\n    const { state, response } = await this.readSignoutResponseState(url, true);\n    if (state) {\n      logger2.debug(\"Received state from storage; validating response\");\n      this._validator.validateSignoutResponse(response, state);\n    } else {\n      logger2.debug(\"No state from storage; skipping response validation\");\n    }\n    return response;\n  }\n  clearStaleState() {\n    this._logger.create(\"clearStaleState\");\n    return State.clearStaleState(this.settings.stateStore, this.settings.staleStateAgeInSeconds);\n  }\n  async revokeToken(token, type) {\n    this._logger.create(\"revokeToken\");\n    return await this._tokenClient.revoke({\n      token,\n      token_type_hint: type\n    });\n  }\n};\n\n// src/SessionMonitor.ts\nvar SessionMonitor = class {\n  constructor(_userManager) {\n    this._userManager = _userManager;\n    this._logger = new Logger(\"SessionMonitor\");\n    this._start = async (user) => {\n      const session_state = user.session_state;\n      if (!session_state) {\n        return;\n      }\n      const logger2 = this._logger.create(\"_start\");\n      if (user.profile) {\n        this._sub = user.profile.sub;\n        logger2.debug(\"session_state\", session_state, \", sub\", this._sub);\n      } else {\n        this._sub = void 0;\n        logger2.debug(\"session_state\", session_state, \", anonymous user\");\n      }\n      if (this._checkSessionIFrame) {\n        this._checkSessionIFrame.start(session_state);\n        return;\n      }\n      try {\n        const url = await this._userManager.metadataService.getCheckSessionIframe();\n        if (url) {\n          logger2.debug(\"initializing check session iframe\");\n          const client_id = this._userManager.settings.client_id;\n          const intervalInSeconds = this._userManager.settings.checkSessionIntervalInSeconds;\n          const stopOnError = this._userManager.settings.stopCheckSessionOnError;\n          const checkSessionIFrame = new CheckSessionIFrame(this._callback, client_id, url, intervalInSeconds, stopOnError);\n          await checkSessionIFrame.load();\n          this._checkSessionIFrame = checkSessionIFrame;\n          checkSessionIFrame.start(session_state);\n        } else {\n          logger2.warn(\"no check session iframe found in the metadata\");\n        }\n      } catch (err) {\n        logger2.error(\"Error from getCheckSessionIframe:\", err instanceof Error ? err.message : err);\n      }\n    };\n    this._stop = () => {\n      const logger2 = this._logger.create(\"_stop\");\n      this._sub = void 0;\n      if (this._checkSessionIFrame) {\n        this._checkSessionIFrame.stop();\n      }\n      if (this._userManager.settings.monitorAnonymousSession) {\n        const timerHandle = setInterval(async () => {\n          clearInterval(timerHandle);\n          try {\n            const session = await this._userManager.querySessionStatus();\n            if (session) {\n              const tmpUser = {\n                session_state: session.session_state,\n                profile: session.sub ? {\n                  sub: session.sub\n                } : null\n              };\n              void this._start(tmpUser);\n            }\n          } catch (err) {\n            logger2.error(\"error from querySessionStatus\", err instanceof Error ? err.message : err);\n          }\n        }, 1e3);\n      }\n    };\n    this._callback = async () => {\n      const logger2 = this._logger.create(\"_callback\");\n      try {\n        const session = await this._userManager.querySessionStatus();\n        let raiseEvent = true;\n        if (session && this._checkSessionIFrame) {\n          if (session.sub === this._sub) {\n            raiseEvent = false;\n            this._checkSessionIFrame.start(session.session_state);\n            logger2.debug(\"same sub still logged in at OP, session state has changed, restarting check session iframe; session_state\", session.session_state);\n            await this._userManager.events._raiseUserSessionChanged();\n          } else {\n            logger2.debug(\"different subject signed into OP\", session.sub);\n          }\n        } else {\n          logger2.debug(\"subject no longer signed into OP\");\n        }\n        if (raiseEvent) {\n          if (this._sub) {\n            await this._userManager.events._raiseUserSignedOut();\n          } else {\n            await this._userManager.events._raiseUserSignedIn();\n          }\n        } else {\n          logger2.debug(\"no change in session detected, no event to raise\");\n        }\n      } catch (err) {\n        if (this._sub) {\n          logger2.debug(\"Error calling queryCurrentSigninSession; raising signed out event\", err);\n          await this._userManager.events._raiseUserSignedOut();\n        }\n      }\n    };\n    if (!_userManager) {\n      this._logger.throw(new Error(\"No user manager passed\"));\n    }\n    this._userManager.events.addUserLoaded(this._start);\n    this._userManager.events.addUserUnloaded(this._stop);\n    this._init().catch((err) => {\n      this._logger.error(err);\n    });\n  }\n  async _init() {\n    this._logger.create(\"_init\");\n    const user = await this._userManager.getUser();\n    if (user) {\n      void this._start(user);\n    } else if (this._userManager.settings.monitorAnonymousSession) {\n      const session = await this._userManager.querySessionStatus();\n      if (session) {\n        const tmpUser = {\n          session_state: session.session_state,\n          profile: session.sub ? {\n            sub: session.sub\n          } : null\n        };\n        void this._start(tmpUser);\n      }\n    }\n  }\n};\n\n// src/User.ts\nvar User = class _User {\n  constructor(args) {\n    var _a;\n    this.id_token = args.id_token;\n    this.session_state = (_a = args.session_state) != null ? _a : null;\n    this.access_token = args.access_token;\n    this.refresh_token = args.refresh_token;\n    this.token_type = args.token_type;\n    this.scope = args.scope;\n    this.profile = args.profile;\n    this.expires_at = args.expires_at;\n    this.state = args.userState;\n    this.url_state = args.url_state;\n  }\n  /** Computed number of seconds the access token has remaining. */\n  get expires_in() {\n    if (this.expires_at === void 0) {\n      return void 0;\n    }\n    return this.expires_at - Timer.getEpochTime();\n  }\n  set expires_in(value) {\n    if (value !== void 0) {\n      this.expires_at = Math.floor(value) + Timer.getEpochTime();\n    }\n  }\n  /** Computed value indicating if the access token is expired. */\n  get expired() {\n    const expires_in = this.expires_in;\n    if (expires_in === void 0) {\n      return void 0;\n    }\n    return expires_in <= 0;\n  }\n  /** Array representing the parsed values from the `scope`. */\n  get scopes() {\n    var _a, _b;\n    return (_b = (_a = this.scope) == null ? void 0 : _a.split(\" \")) != null ? _b : [];\n  }\n  toStorageString() {\n    new Logger(\"User\").create(\"toStorageString\");\n    return JSON.stringify({\n      id_token: this.id_token,\n      session_state: this.session_state,\n      access_token: this.access_token,\n      refresh_token: this.refresh_token,\n      token_type: this.token_type,\n      scope: this.scope,\n      profile: this.profile,\n      expires_at: this.expires_at\n    });\n  }\n  static fromStorageString(storageString) {\n    Logger.createStatic(\"User\", \"fromStorageString\");\n    return new _User(JSON.parse(storageString));\n  }\n};\n\n// src/navigators/AbstractChildWindow.ts\nvar messageSource = \"oidc-client\";\nvar AbstractChildWindow = class {\n  constructor() {\n    this._abort = new Event(\"Window navigation aborted\");\n    this._disposeHandlers = /* @__PURE__ */ new Set();\n    this._window = null;\n  }\n  async navigate(params) {\n    const logger2 = this._logger.create(\"navigate\");\n    if (!this._window) {\n      throw new Error(\"Attempted to navigate on a disposed window\");\n    }\n    logger2.debug(\"setting URL in window\");\n    this._window.location.replace(params.url);\n    const { url, keepOpen } = await new Promise((resolve, reject) => {\n      const listener = (e) => {\n        var _a;\n        const data = e.data;\n        const origin = (_a = params.scriptOrigin) != null ? _a : window.location.origin;\n        if (e.origin !== origin || (data == null ? void 0 : data.source) !== messageSource) {\n          return;\n        }\n        try {\n          const state = UrlUtils.readParams(data.url, params.response_mode).get(\"state\");\n          if (!state) {\n            logger2.warn(\"no state found in response url\");\n          }\n          if (e.source !== this._window && state !== params.state) {\n            return;\n          }\n        } catch {\n          this._dispose();\n          reject(new Error(\"Invalid response from window\"));\n        }\n        resolve(data);\n      };\n      window.addEventListener(\"message\", listener, false);\n      this._disposeHandlers.add(() => window.removeEventListener(\"message\", listener, false));\n      this._disposeHandlers.add(this._abort.addHandler((reason) => {\n        this._dispose();\n        reject(reason);\n      }));\n    });\n    logger2.debug(\"got response from window\");\n    this._dispose();\n    if (!keepOpen) {\n      this.close();\n    }\n    return { url };\n  }\n  _dispose() {\n    this._logger.create(\"_dispose\");\n    for (const dispose of this._disposeHandlers) {\n      dispose();\n    }\n    this._disposeHandlers.clear();\n  }\n  static _notifyParent(parent, url, keepOpen = false, targetOrigin = window.location.origin) {\n    parent.postMessage({\n      source: messageSource,\n      url,\n      keepOpen\n    }, targetOrigin);\n  }\n};\n\n// src/UserManagerSettings.ts\nvar DefaultPopupWindowFeatures = {\n  location: false,\n  toolbar: false,\n  height: 640,\n  closePopupWindowAfterInSeconds: -1\n};\nvar DefaultPopupTarget = \"_blank\";\nvar DefaultAccessTokenExpiringNotificationTimeInSeconds = 60;\nvar DefaultCheckSessionIntervalInSeconds = 2;\nvar DefaultSilentRequestTimeoutInSeconds = 10;\nvar UserManagerSettingsStore = class extends OidcClientSettingsStore {\n  constructor(args) {\n    const {\n      popup_redirect_uri = args.redirect_uri,\n      popup_post_logout_redirect_uri = args.post_logout_redirect_uri,\n      popupWindowFeatures = DefaultPopupWindowFeatures,\n      popupWindowTarget = DefaultPopupTarget,\n      redirectMethod = \"assign\",\n      redirectTarget = \"self\",\n      iframeNotifyParentOrigin = args.iframeNotifyParentOrigin,\n      iframeScriptOrigin = args.iframeScriptOrigin,\n      requestTimeoutInSeconds,\n      silent_redirect_uri = args.redirect_uri,\n      silentRequestTimeoutInSeconds,\n      automaticSilentRenew = true,\n      validateSubOnSilentRenew = true,\n      includeIdTokenInSilentRenew = false,\n      monitorSession = false,\n      monitorAnonymousSession = false,\n      checkSessionIntervalInSeconds = DefaultCheckSessionIntervalInSeconds,\n      query_status_response_type = \"code\",\n      stopCheckSessionOnError = true,\n      revokeTokenTypes = [\"access_token\", \"refresh_token\"],\n      revokeTokensOnSignout = false,\n      includeIdTokenInSilentSignout = false,\n      accessTokenExpiringNotificationTimeInSeconds = DefaultAccessTokenExpiringNotificationTimeInSeconds,\n      userStore\n    } = args;\n    super(args);\n    this.popup_redirect_uri = popup_redirect_uri;\n    this.popup_post_logout_redirect_uri = popup_post_logout_redirect_uri;\n    this.popupWindowFeatures = popupWindowFeatures;\n    this.popupWindowTarget = popupWindowTarget;\n    this.redirectMethod = redirectMethod;\n    this.redirectTarget = redirectTarget;\n    this.iframeNotifyParentOrigin = iframeNotifyParentOrigin;\n    this.iframeScriptOrigin = iframeScriptOrigin;\n    this.silent_redirect_uri = silent_redirect_uri;\n    this.silentRequestTimeoutInSeconds = silentRequestTimeoutInSeconds || requestTimeoutInSeconds || DefaultSilentRequestTimeoutInSeconds;\n    this.automaticSilentRenew = automaticSilentRenew;\n    this.validateSubOnSilentRenew = validateSubOnSilentRenew;\n    this.includeIdTokenInSilentRenew = includeIdTokenInSilentRenew;\n    this.monitorSession = monitorSession;\n    this.monitorAnonymousSession = monitorAnonymousSession;\n    this.checkSessionIntervalInSeconds = checkSessionIntervalInSeconds;\n    this.stopCheckSessionOnError = stopCheckSessionOnError;\n    this.query_status_response_type = query_status_response_type;\n    this.revokeTokenTypes = revokeTokenTypes;\n    this.revokeTokensOnSignout = revokeTokensOnSignout;\n    this.includeIdTokenInSilentSignout = includeIdTokenInSilentSignout;\n    this.accessTokenExpiringNotificationTimeInSeconds = accessTokenExpiringNotificationTimeInSeconds;\n    if (userStore) {\n      this.userStore = userStore;\n    } else {\n      const store = typeof window !== \"undefined\" ? window.sessionStorage : new InMemoryWebStorage();\n      this.userStore = new WebStorageStateStore({ store });\n    }\n  }\n};\n\n// src/navigators/IFrameWindow.ts\nvar IFrameWindow = class _IFrameWindow extends AbstractChildWindow {\n  constructor({\n    silentRequestTimeoutInSeconds = DefaultSilentRequestTimeoutInSeconds\n  }) {\n    super();\n    this._logger = new Logger(\"IFrameWindow\");\n    this._timeoutInSeconds = silentRequestTimeoutInSeconds;\n    this._frame = _IFrameWindow.createHiddenIframe();\n    this._window = this._frame.contentWindow;\n  }\n  static createHiddenIframe() {\n    const iframe = window.document.createElement(\"iframe\");\n    iframe.style.visibility = \"hidden\";\n    iframe.style.position = \"fixed\";\n    iframe.style.left = \"-1000px\";\n    iframe.style.top = \"0\";\n    iframe.width = \"0\";\n    iframe.height = \"0\";\n    window.document.body.appendChild(iframe);\n    return iframe;\n  }\n  async navigate(params) {\n    this._logger.debug(\"navigate: Using timeout of:\", this._timeoutInSeconds);\n    const timer = setTimeout(() => void this._abort.raise(new ErrorTimeout(\"IFrame timed out without a response\")), this._timeoutInSeconds * 1e3);\n    this._disposeHandlers.add(() => clearTimeout(timer));\n    return await super.navigate(params);\n  }\n  close() {\n    var _a;\n    if (this._frame) {\n      if (this._frame.parentNode) {\n        this._frame.addEventListener(\"load\", (ev) => {\n          var _a2;\n          const frame = ev.target;\n          (_a2 = frame.parentNode) == null ? void 0 : _a2.removeChild(frame);\n          void this._abort.raise(new Error(\"IFrame removed from DOM\"));\n        }, true);\n        (_a = this._frame.contentWindow) == null ? void 0 : _a.location.replace(\"about:blank\");\n      }\n      this._frame = null;\n    }\n    this._window = null;\n  }\n  static notifyParent(url, targetOrigin) {\n    return super._notifyParent(window.parent, url, false, targetOrigin);\n  }\n};\n\n// src/navigators/IFrameNavigator.ts\nvar IFrameNavigator = class {\n  constructor(_settings) {\n    this._settings = _settings;\n    this._logger = new Logger(\"IFrameNavigator\");\n  }\n  async prepare({\n    silentRequestTimeoutInSeconds = this._settings.silentRequestTimeoutInSeconds\n  }) {\n    return new IFrameWindow({ silentRequestTimeoutInSeconds });\n  }\n  async callback(url) {\n    this._logger.create(\"callback\");\n    IFrameWindow.notifyParent(url, this._settings.iframeNotifyParentOrigin);\n  }\n};\n\n// src/navigators/PopupWindow.ts\nvar checkForPopupClosedInterval = 500;\nvar second = 1e3;\nvar PopupWindow = class extends AbstractChildWindow {\n  constructor({\n    popupWindowTarget = DefaultPopupTarget,\n    popupWindowFeatures = {},\n    popupSignal\n  }) {\n    super();\n    this._logger = new Logger(\"PopupWindow\");\n    const centeredPopup = PopupUtils.center({ ...DefaultPopupWindowFeatures, ...popupWindowFeatures });\n    this._window = window.open(void 0, popupWindowTarget, PopupUtils.serialize(centeredPopup));\n    if (popupSignal) {\n      popupSignal.addEventListener(\"abort\", () => {\n        var _a;\n        void this._abort.raise(new Error((_a = popupSignal.reason) != null ? _a : \"Popup aborted\"));\n      });\n    }\n    if (popupWindowFeatures.closePopupWindowAfterInSeconds && popupWindowFeatures.closePopupWindowAfterInSeconds > 0) {\n      setTimeout(() => {\n        if (!this._window || typeof this._window.closed !== \"boolean\" || this._window.closed) {\n          void this._abort.raise(new Error(\"Popup blocked by user\"));\n          return;\n        }\n        this.close();\n      }, popupWindowFeatures.closePopupWindowAfterInSeconds * second);\n    }\n  }\n  async navigate(params) {\n    var _a;\n    (_a = this._window) == null ? void 0 : _a.focus();\n    const popupClosedInterval = setInterval(() => {\n      if (!this._window || this._window.closed) {\n        void this._abort.raise(new Error(\"Popup closed by user\"));\n      }\n    }, checkForPopupClosedInterval);\n    this._disposeHandlers.add(() => clearInterval(popupClosedInterval));\n    return await super.navigate(params);\n  }\n  close() {\n    if (this._window) {\n      if (!this._window.closed) {\n        this._window.close();\n        void this._abort.raise(new Error(\"Popup closed\"));\n      }\n    }\n    this._window = null;\n  }\n  static notifyOpener(url, keepOpen) {\n    if (!window.opener) {\n      throw new Error(\"No window.opener. Can't complete notification.\");\n    }\n    return super._notifyParent(window.opener, url, keepOpen);\n  }\n};\n\n// src/navigators/PopupNavigator.ts\nvar PopupNavigator = class {\n  constructor(_settings) {\n    this._settings = _settings;\n    this._logger = new Logger(\"PopupNavigator\");\n  }\n  async prepare({\n    popupWindowFeatures = this._settings.popupWindowFeatures,\n    popupWindowTarget = this._settings.popupWindowTarget,\n    popupSignal\n  }) {\n    return new PopupWindow({ popupWindowFeatures, popupWindowTarget, popupSignal });\n  }\n  async callback(url, { keepOpen = false }) {\n    this._logger.create(\"callback\");\n    PopupWindow.notifyOpener(url, keepOpen);\n  }\n};\n\n// src/navigators/RedirectNavigator.ts\nvar RedirectNavigator = class {\n  constructor(_settings) {\n    this._settings = _settings;\n    this._logger = new Logger(\"RedirectNavigator\");\n  }\n  async prepare({\n    redirectMethod = this._settings.redirectMethod,\n    redirectTarget = this._settings.redirectTarget\n  }) {\n    var _a;\n    this._logger.create(\"prepare\");\n    let targetWindow = window.self;\n    if (redirectTarget === \"top\") {\n      targetWindow = (_a = window.top) != null ? _a : window.self;\n    }\n    const redirect = targetWindow.location[redirectMethod].bind(targetWindow.location);\n    let abort;\n    return {\n      navigate: async (params) => {\n        this._logger.create(\"navigate\");\n        const promise = new Promise((resolve, reject) => {\n          abort = reject;\n        });\n        redirect(params.url);\n        return await promise;\n      },\n      close: () => {\n        this._logger.create(\"close\");\n        abort == null ? void 0 : abort(new Error(\"Redirect aborted\"));\n        targetWindow.stop();\n      }\n    };\n  }\n  async callback() {\n    return;\n  }\n};\n\n// src/UserManagerEvents.ts\nvar UserManagerEvents = class extends AccessTokenEvents {\n  constructor(settings) {\n    super({ expiringNotificationTimeInSeconds: settings.accessTokenExpiringNotificationTimeInSeconds });\n    this._logger = new Logger(\"UserManagerEvents\");\n    this._userLoaded = new Event(\"User loaded\");\n    this._userUnloaded = new Event(\"User unloaded\");\n    this._silentRenewError = new Event(\"Silent renew error\");\n    this._userSignedIn = new Event(\"User signed in\");\n    this._userSignedOut = new Event(\"User signed out\");\n    this._userSessionChanged = new Event(\"User session changed\");\n  }\n  async load(user, raiseEvent = true) {\n    await super.load(user);\n    if (raiseEvent) {\n      await this._userLoaded.raise(user);\n    }\n  }\n  async unload() {\n    await super.unload();\n    await this._userUnloaded.raise();\n  }\n  /**\n   * Add callback: Raised when a user session has been established (or re-established).\n   */\n  addUserLoaded(cb) {\n    return this._userLoaded.addHandler(cb);\n  }\n  /**\n   * Remove callback: Raised when a user session has been established (or re-established).\n   */\n  removeUserLoaded(cb) {\n    return this._userLoaded.removeHandler(cb);\n  }\n  /**\n   * Add callback: Raised when a user session has been terminated.\n   */\n  addUserUnloaded(cb) {\n    return this._userUnloaded.addHandler(cb);\n  }\n  /**\n   * Remove callback: Raised when a user session has been terminated.\n   */\n  removeUserUnloaded(cb) {\n    return this._userUnloaded.removeHandler(cb);\n  }\n  /**\n   * Add callback: Raised when the automatic silent renew has failed.\n   */\n  addSilentRenewError(cb) {\n    return this._silentRenewError.addHandler(cb);\n  }\n  /**\n   * Remove callback: Raised when the automatic silent renew has failed.\n   */\n  removeSilentRenewError(cb) {\n    return this._silentRenewError.removeHandler(cb);\n  }\n  /**\n   * @internal\n   */\n  async _raiseSilentRenewError(e) {\n    await this._silentRenewError.raise(e);\n  }\n  /**\n   * Add callback: Raised when the user is signed in (when `monitorSession` is set).\n   * @see {@link UserManagerSettings.monitorSession}\n   */\n  addUserSignedIn(cb) {\n    return this._userSignedIn.addHandler(cb);\n  }\n  /**\n   * Remove callback: Raised when the user is signed in (when `monitorSession` is set).\n   */\n  removeUserSignedIn(cb) {\n    this._userSignedIn.removeHandler(cb);\n  }\n  /**\n   * @internal\n   */\n  async _raiseUserSignedIn() {\n    await this._userSignedIn.raise();\n  }\n  /**\n   * Add callback: Raised when the user's sign-in status at the OP has changed (when `monitorSession` is set).\n   * @see {@link UserManagerSettings.monitorSession}\n   */\n  addUserSignedOut(cb) {\n    return this._userSignedOut.addHandler(cb);\n  }\n  /**\n   * Remove callback: Raised when the user's sign-in status at the OP has changed (when `monitorSession` is set).\n   */\n  removeUserSignedOut(cb) {\n    this._userSignedOut.removeHandler(cb);\n  }\n  /**\n   * @internal\n   */\n  async _raiseUserSignedOut() {\n    await this._userSignedOut.raise();\n  }\n  /**\n   * Add callback: Raised when the user session changed (when `monitorSession` is set).\n   * @see {@link UserManagerSettings.monitorSession}\n   */\n  addUserSessionChanged(cb) {\n    return this._userSessionChanged.addHandler(cb);\n  }\n  /**\n   * Remove callback: Raised when the user session changed (when `monitorSession` is set).\n   */\n  removeUserSessionChanged(cb) {\n    this._userSessionChanged.removeHandler(cb);\n  }\n  /**\n   * @internal\n   */\n  async _raiseUserSessionChanged() {\n    await this._userSessionChanged.raise();\n  }\n};\n\n// src/SilentRenewService.ts\nvar SilentRenewService = class {\n  constructor(_userManager) {\n    this._userManager = _userManager;\n    this._logger = new Logger(\"SilentRenewService\");\n    this._isStarted = false;\n    this._retryTimer = new Timer(\"Retry Silent Renew\");\n    this._tokenExpiring = async () => {\n      const logger2 = this._logger.create(\"_tokenExpiring\");\n      try {\n        await this._userManager.signinSilent();\n        logger2.debug(\"silent token renewal successful\");\n      } catch (err) {\n        if (err instanceof ErrorTimeout) {\n          logger2.warn(\"ErrorTimeout from signinSilent:\", err, \"retry in 5s\");\n          this._retryTimer.init(5);\n          return;\n        }\n        logger2.error(\"Error from signinSilent:\", err);\n        await this._userManager.events._raiseSilentRenewError(err);\n      }\n    };\n  }\n  async start() {\n    const logger2 = this._logger.create(\"start\");\n    if (!this._isStarted) {\n      this._isStarted = true;\n      this._userManager.events.addAccessTokenExpiring(this._tokenExpiring);\n      this._retryTimer.addHandler(this._tokenExpiring);\n      try {\n        await this._userManager.getUser();\n      } catch (err) {\n        logger2.error(\"getUser error\", err);\n      }\n    }\n  }\n  stop() {\n    if (this._isStarted) {\n      this._retryTimer.cancel();\n      this._retryTimer.removeHandler(this._tokenExpiring);\n      this._userManager.events.removeAccessTokenExpiring(this._tokenExpiring);\n      this._isStarted = false;\n    }\n  }\n};\n\n// src/RefreshState.ts\nvar RefreshState = class {\n  constructor(args) {\n    this.refresh_token = args.refresh_token;\n    this.id_token = args.id_token;\n    this.session_state = args.session_state;\n    this.scope = args.scope;\n    this.profile = args.profile;\n    this.data = args.state;\n  }\n};\n\n// src/UserManager.ts\nvar UserManager = class {\n  constructor(settings, redirectNavigator, popupNavigator, iframeNavigator) {\n    this._logger = new Logger(\"UserManager\");\n    this.settings = new UserManagerSettingsStore(settings);\n    this._client = new OidcClient(settings);\n    this._redirectNavigator = redirectNavigator != null ? redirectNavigator : new RedirectNavigator(this.settings);\n    this._popupNavigator = popupNavigator != null ? popupNavigator : new PopupNavigator(this.settings);\n    this._iframeNavigator = iframeNavigator != null ? iframeNavigator : new IFrameNavigator(this.settings);\n    this._events = new UserManagerEvents(this.settings);\n    this._silentRenewService = new SilentRenewService(this);\n    if (this.settings.automaticSilentRenew) {\n      this.startSilentRenew();\n    }\n    this._sessionMonitor = null;\n    if (this.settings.monitorSession) {\n      this._sessionMonitor = new SessionMonitor(this);\n    }\n  }\n  /**\n   * Get object used to register for events raised by the `UserManager`.\n   */\n  get events() {\n    return this._events;\n  }\n  /**\n   * Get object used to access the metadata configuration of the identity provider.\n   */\n  get metadataService() {\n    return this._client.metadataService;\n  }\n  /**\n   * Load the `User` object for the currently authenticated user.\n   *\n   * @param raiseEvent - If `true`, the `UserLoaded` event will be raised. Defaults to false.\n   * @returns A promise\n   */\n  async getUser(raiseEvent = false) {\n    const logger2 = this._logger.create(\"getUser\");\n    const user = await this._loadUser();\n    if (user) {\n      logger2.info(\"user loaded\");\n      await this._events.load(user, raiseEvent);\n      return user;\n    }\n    logger2.info(\"user not found in storage\");\n    return null;\n  }\n  /**\n   * Remove from any storage the currently authenticated user.\n   *\n   * @returns A promise\n   */\n  async removeUser() {\n    const logger2 = this._logger.create(\"removeUser\");\n    await this.storeUser(null);\n    logger2.info(\"user removed from storage\");\n    await this._events.unload();\n  }\n  /**\n   * Trigger a redirect of the current window to the authorization endpoint.\n   *\n   * @returns A promise\n   *\n   * @throws `Error` In cases of wrong authentication.\n   */\n  async signinRedirect(args = {}) {\n    var _a;\n    this._logger.create(\"signinRedirect\");\n    const {\n      redirectMethod,\n      ...requestArgs\n    } = args;\n    let dpopJkt;\n    if ((_a = this.settings.dpop) == null ? void 0 : _a.bind_authorization_code) {\n      dpopJkt = await this.generateDPoPJkt(this.settings.dpop);\n    }\n    const handle = await this._redirectNavigator.prepare({ redirectMethod });\n    await this._signinStart({\n      request_type: \"si:r\",\n      dpopJkt,\n      ...requestArgs\n    }, handle);\n  }\n  /**\n   * Process the response (callback) from the authorization endpoint.\n   * It is recommended to use {@link UserManager.signinCallback} instead.\n   *\n   * @returns A promise containing the authenticated `User`.\n   *\n   * @see {@link UserManager.signinCallback}\n   */\n  async signinRedirectCallback(url = window.location.href) {\n    const logger2 = this._logger.create(\"signinRedirectCallback\");\n    const user = await this._signinEnd(url);\n    if (user.profile && user.profile.sub) {\n      logger2.info(\"success, signed in subject\", user.profile.sub);\n    } else {\n      logger2.info(\"no subject\");\n    }\n    return user;\n  }\n  /**\n   * Trigger the signin with user/password.\n   *\n   * @returns A promise containing the authenticated `User`.\n   * @throws {@link ErrorResponse} In cases of wrong authentication.\n   */\n  async signinResourceOwnerCredentials({\n    username,\n    password,\n    skipUserInfo = false\n  }) {\n    const logger2 = this._logger.create(\"signinResourceOwnerCredential\");\n    const signinResponse = await this._client.processResourceOwnerPasswordCredentials({\n      username,\n      password,\n      skipUserInfo,\n      extraTokenParams: this.settings.extraTokenParams\n    });\n    logger2.debug(\"got signin response\");\n    const user = await this._buildUser(signinResponse);\n    if (user.profile && user.profile.sub) {\n      logger2.info(\"success, signed in subject\", user.profile.sub);\n    } else {\n      logger2.info(\"no subject\");\n    }\n    return user;\n  }\n  /**\n   * Trigger a request (via a popup window) to the authorization endpoint.\n   *\n   * @returns A promise containing the authenticated `User`.\n   * @throws `Error` In cases of wrong authentication.\n   */\n  async signinPopup(args = {}) {\n    var _a;\n    const logger2 = this._logger.create(\"signinPopup\");\n    let dpopJkt;\n    if ((_a = this.settings.dpop) == null ? void 0 : _a.bind_authorization_code) {\n      dpopJkt = await this.generateDPoPJkt(this.settings.dpop);\n    }\n    const {\n      popupWindowFeatures,\n      popupWindowTarget,\n      popupSignal,\n      ...requestArgs\n    } = args;\n    const url = this.settings.popup_redirect_uri;\n    if (!url) {\n      logger2.throw(new Error(\"No popup_redirect_uri configured\"));\n    }\n    const handle = await this._popupNavigator.prepare({ popupWindowFeatures, popupWindowTarget, popupSignal });\n    const user = await this._signin({\n      request_type: \"si:p\",\n      redirect_uri: url,\n      display: \"popup\",\n      dpopJkt,\n      ...requestArgs\n    }, handle);\n    if (user) {\n      if (user.profile && user.profile.sub) {\n        logger2.info(\"success, signed in subject\", user.profile.sub);\n      } else {\n        logger2.info(\"no subject\");\n      }\n    }\n    return user;\n  }\n  /**\n   * Notify the opening window of response (callback) from the authorization endpoint.\n   * It is recommended to use {@link UserManager.signinCallback} instead.\n   *\n   * @returns A promise\n   *\n   * @see {@link UserManager.signinCallback}\n   */\n  async signinPopupCallback(url = window.location.href, keepOpen = false) {\n    const logger2 = this._logger.create(\"signinPopupCallback\");\n    await this._popupNavigator.callback(url, { keepOpen });\n    logger2.info(\"success\");\n  }\n  /**\n   * Trigger a silent request (via refresh token or an iframe) to the authorization endpoint.\n   *\n   * @returns A promise that contains the authenticated `User`.\n   */\n  async signinSilent(args = {}) {\n    var _a, _b;\n    const logger2 = this._logger.create(\"signinSilent\");\n    const {\n      silentRequestTimeoutInSeconds,\n      ...requestArgs\n    } = args;\n    let user = await this._loadUser();\n    if (user == null ? void 0 : user.refresh_token) {\n      logger2.debug(\"using refresh token\");\n      const state = new RefreshState(user);\n      return await this._useRefreshToken({\n        state,\n        redirect_uri: requestArgs.redirect_uri,\n        resource: requestArgs.resource,\n        extraTokenParams: requestArgs.extraTokenParams,\n        timeoutInSeconds: silentRequestTimeoutInSeconds\n      });\n    }\n    let dpopJkt;\n    if ((_a = this.settings.dpop) == null ? void 0 : _a.bind_authorization_code) {\n      dpopJkt = await this.generateDPoPJkt(this.settings.dpop);\n    }\n    const url = this.settings.silent_redirect_uri;\n    if (!url) {\n      logger2.throw(new Error(\"No silent_redirect_uri configured\"));\n    }\n    let verifySub;\n    if (user && this.settings.validateSubOnSilentRenew) {\n      logger2.debug(\"subject prior to silent renew:\", user.profile.sub);\n      verifySub = user.profile.sub;\n    }\n    const handle = await this._iframeNavigator.prepare({ silentRequestTimeoutInSeconds });\n    user = await this._signin({\n      request_type: \"si:s\",\n      redirect_uri: url,\n      prompt: \"none\",\n      id_token_hint: this.settings.includeIdTokenInSilentRenew ? user == null ? void 0 : user.id_token : void 0,\n      dpopJkt,\n      ...requestArgs\n    }, handle, verifySub);\n    if (user) {\n      if ((_b = user.profile) == null ? void 0 : _b.sub) {\n        logger2.info(\"success, signed in subject\", user.profile.sub);\n      } else {\n        logger2.info(\"no subject\");\n      }\n    }\n    return user;\n  }\n  async _useRefreshToken(args) {\n    const response = await this._client.useRefreshToken({\n      timeoutInSeconds: this.settings.silentRequestTimeoutInSeconds,\n      ...args\n    });\n    const user = new User({ ...args.state, ...response });\n    await this.storeUser(user);\n    await this._events.load(user);\n    return user;\n  }\n  /**\n   *\n   * Notify the parent window of response (callback) from the authorization endpoint.\n   * It is recommended to use {@link UserManager.signinCallback} instead.\n   *\n   * @returns A promise\n   *\n   * @see {@link UserManager.signinCallback}\n   */\n  async signinSilentCallback(url = window.location.href) {\n    const logger2 = this._logger.create(\"signinSilentCallback\");\n    await this._iframeNavigator.callback(url);\n    logger2.info(\"success\");\n  }\n  /**\n   * Process any response (callback) from the authorization endpoint, by dispatching the request_type\n   * and executing one of the following functions:\n   * - {@link UserManager.signinRedirectCallback}\n   * - {@link UserManager.signinPopupCallback}\n   * - {@link UserManager.signinSilentCallback}\n   *\n   * @throws `Error` If request_type is unknown or signin cannot be processed.\n   */\n  async signinCallback(url = window.location.href) {\n    const { state } = await this._client.readSigninResponseState(url);\n    switch (state.request_type) {\n      case \"si:r\":\n        return await this.signinRedirectCallback(url);\n      case \"si:p\":\n        await this.signinPopupCallback(url);\n        break;\n      case \"si:s\":\n        await this.signinSilentCallback(url);\n        break;\n      default:\n        throw new Error(\"invalid response_type in state\");\n    }\n    return void 0;\n  }\n  /**\n   * Process any response (callback) from the end session endpoint, by dispatching the request_type\n   * and executing one of the following functions:\n   * - {@link UserManager.signoutRedirectCallback}\n   * - {@link UserManager.signoutPopupCallback}\n   * - {@link UserManager.signoutSilentCallback}\n   *\n   * @throws `Error` If request_type is unknown or signout cannot be processed.\n   */\n  async signoutCallback(url = window.location.href, keepOpen = false) {\n    const { state } = await this._client.readSignoutResponseState(url);\n    if (!state) {\n      return void 0;\n    }\n    switch (state.request_type) {\n      case \"so:r\":\n        return await this.signoutRedirectCallback(url);\n      case \"so:p\":\n        await this.signoutPopupCallback(url, keepOpen);\n        break;\n      case \"so:s\":\n        await this.signoutSilentCallback(url);\n        break;\n      default:\n        throw new Error(\"invalid response_type in state\");\n    }\n    return void 0;\n  }\n  /**\n   * Query OP for user's current signin status.\n   *\n   * @returns A promise object with session_state and subject identifier.\n   */\n  async querySessionStatus(args = {}) {\n    const logger2 = this._logger.create(\"querySessionStatus\");\n    const {\n      silentRequestTimeoutInSeconds,\n      ...requestArgs\n    } = args;\n    const url = this.settings.silent_redirect_uri;\n    if (!url) {\n      logger2.throw(new Error(\"No silent_redirect_uri configured\"));\n    }\n    const user = await this._loadUser();\n    const handle = await this._iframeNavigator.prepare({ silentRequestTimeoutInSeconds });\n    const navResponse = await this._signinStart({\n      request_type: \"si:s\",\n      // this acts like a signin silent\n      redirect_uri: url,\n      prompt: \"none\",\n      id_token_hint: this.settings.includeIdTokenInSilentRenew ? user == null ? void 0 : user.id_token : void 0,\n      response_type: this.settings.query_status_response_type,\n      scope: \"openid\",\n      skipUserInfo: true,\n      ...requestArgs\n    }, handle);\n    try {\n      const extraHeaders = {};\n      const signinResponse = await this._client.processSigninResponse(navResponse.url, extraHeaders);\n      logger2.debug(\"got signin response\");\n      if (signinResponse.session_state && signinResponse.profile.sub) {\n        logger2.info(\"success for subject\", signinResponse.profile.sub);\n        return {\n          session_state: signinResponse.session_state,\n          sub: signinResponse.profile.sub\n        };\n      }\n      logger2.info(\"success, user not authenticated\");\n      return null;\n    } catch (err) {\n      if (this.settings.monitorAnonymousSession && err instanceof ErrorResponse) {\n        switch (err.error) {\n          case \"login_required\":\n          case \"consent_required\":\n          case \"interaction_required\":\n          case \"account_selection_required\":\n            logger2.info(\"success for anonymous user\");\n            return {\n              session_state: err.session_state\n            };\n        }\n      }\n      throw err;\n    }\n  }\n  async _signin(args, handle, verifySub) {\n    const navResponse = await this._signinStart(args, handle);\n    return await this._signinEnd(navResponse.url, verifySub);\n  }\n  async _signinStart(args, handle) {\n    const logger2 = this._logger.create(\"_signinStart\");\n    try {\n      const signinRequest = await this._client.createSigninRequest(args);\n      logger2.debug(\"got signin request\");\n      return await handle.navigate({\n        url: signinRequest.url,\n        state: signinRequest.state.id,\n        response_mode: signinRequest.state.response_mode,\n        scriptOrigin: this.settings.iframeScriptOrigin\n      });\n    } catch (err) {\n      logger2.debug(\"error after preparing navigator, closing navigator window\");\n      handle.close();\n      throw err;\n    }\n  }\n  async _signinEnd(url, verifySub) {\n    const logger2 = this._logger.create(\"_signinEnd\");\n    const extraHeaders = {};\n    const signinResponse = await this._client.processSigninResponse(url, extraHeaders);\n    logger2.debug(\"got signin response\");\n    const user = await this._buildUser(signinResponse, verifySub);\n    return user;\n  }\n  async _buildUser(signinResponse, verifySub) {\n    const logger2 = this._logger.create(\"_buildUser\");\n    const user = new User(signinResponse);\n    if (verifySub) {\n      if (verifySub !== user.profile.sub) {\n        logger2.debug(\"current user does not match user returned from signin. sub from signin:\", user.profile.sub);\n        throw new ErrorResponse({ ...signinResponse, error: \"login_required\" });\n      }\n      logger2.debug(\"current user matches user returned from signin\");\n    }\n    await this.storeUser(user);\n    logger2.debug(\"user stored\");\n    await this._events.load(user);\n    return user;\n  }\n  /**\n   * Trigger a redirect of the current window to the end session endpoint.\n   *\n   * @returns A promise\n   */\n  async signoutRedirect(args = {}) {\n    const logger2 = this._logger.create(\"signoutRedirect\");\n    const {\n      redirectMethod,\n      ...requestArgs\n    } = args;\n    const handle = await this._redirectNavigator.prepare({ redirectMethod });\n    await this._signoutStart({\n      request_type: \"so:r\",\n      post_logout_redirect_uri: this.settings.post_logout_redirect_uri,\n      ...requestArgs\n    }, handle);\n    logger2.info(\"success\");\n  }\n  /**\n   * Process response (callback) from the end session endpoint.\n   * It is recommended to use {@link UserManager.signoutCallback} instead.\n   *\n   * @returns A promise containing signout response\n   *\n   * @see {@link UserManager.signoutCallback}\n   */\n  async signoutRedirectCallback(url = window.location.href) {\n    const logger2 = this._logger.create(\"signoutRedirectCallback\");\n    const response = await this._signoutEnd(url);\n    logger2.info(\"success\");\n    return response;\n  }\n  /**\n   * Trigger a redirect of a popup window to the end session endpoint.\n   *\n   * @returns A promise\n   */\n  async signoutPopup(args = {}) {\n    const logger2 = this._logger.create(\"signoutPopup\");\n    const {\n      popupWindowFeatures,\n      popupWindowTarget,\n      popupSignal,\n      ...requestArgs\n    } = args;\n    const url = this.settings.popup_post_logout_redirect_uri;\n    const handle = await this._popupNavigator.prepare({ popupWindowFeatures, popupWindowTarget, popupSignal });\n    await this._signout({\n      request_type: \"so:p\",\n      post_logout_redirect_uri: url,\n      // we're putting a dummy entry in here because we\n      // need a unique id from the state for notification\n      // to the parent window, which is necessary if we\n      // plan to return back to the client after signout\n      // and so we can close the popup after signout\n      state: url == null ? void 0 : {},\n      ...requestArgs\n    }, handle);\n    logger2.info(\"success\");\n  }\n  /**\n   * Process response (callback) from the end session endpoint from a popup window.\n   * It is recommended to use {@link UserManager.signoutCallback} instead.\n   *\n   * @returns A promise\n   *\n   * @see {@link UserManager.signoutCallback}\n   */\n  async signoutPopupCallback(url = window.location.href, keepOpen = false) {\n    const logger2 = this._logger.create(\"signoutPopupCallback\");\n    await this._popupNavigator.callback(url, { keepOpen });\n    logger2.info(\"success\");\n  }\n  async _signout(args, handle) {\n    const navResponse = await this._signoutStart(args, handle);\n    return await this._signoutEnd(navResponse.url);\n  }\n  async _signoutStart(args = {}, handle) {\n    var _a;\n    const logger2 = this._logger.create(\"_signoutStart\");\n    try {\n      const user = await this._loadUser();\n      logger2.debug(\"loaded current user from storage\");\n      if (this.settings.revokeTokensOnSignout) {\n        await this._revokeInternal(user);\n      }\n      const id_token = args.id_token_hint || user && user.id_token;\n      if (id_token) {\n        logger2.debug(\"setting id_token_hint in signout request\");\n        args.id_token_hint = id_token;\n      }\n      await this.removeUser();\n      logger2.debug(\"user removed, creating signout request\");\n      const signoutRequest = await this._client.createSignoutRequest(args);\n      logger2.debug(\"got signout request\");\n      return await handle.navigate({\n        url: signoutRequest.url,\n        state: (_a = signoutRequest.state) == null ? void 0 : _a.id,\n        scriptOrigin: this.settings.iframeScriptOrigin\n      });\n    } catch (err) {\n      logger2.debug(\"error after preparing navigator, closing navigator window\");\n      handle.close();\n      throw err;\n    }\n  }\n  async _signoutEnd(url) {\n    const logger2 = this._logger.create(\"_signoutEnd\");\n    const signoutResponse = await this._client.processSignoutResponse(url);\n    logger2.debug(\"got signout response\");\n    return signoutResponse;\n  }\n  /**\n   * Trigger a silent request (via an iframe) to the end session endpoint.\n   *\n   * @returns A promise\n   */\n  async signoutSilent(args = {}) {\n    var _a;\n    const logger2 = this._logger.create(\"signoutSilent\");\n    const {\n      silentRequestTimeoutInSeconds,\n      ...requestArgs\n    } = args;\n    const id_token_hint = this.settings.includeIdTokenInSilentSignout ? (_a = await this._loadUser()) == null ? void 0 : _a.id_token : void 0;\n    const url = this.settings.popup_post_logout_redirect_uri;\n    const handle = await this._iframeNavigator.prepare({ silentRequestTimeoutInSeconds });\n    await this._signout({\n      request_type: \"so:s\",\n      post_logout_redirect_uri: url,\n      id_token_hint,\n      ...requestArgs\n    }, handle);\n    logger2.info(\"success\");\n  }\n  /**\n   * Notify the parent window of response (callback) from the end session endpoint.\n   * It is recommended to use {@link UserManager.signoutCallback} instead.\n   *\n   * @returns A promise\n   *\n   * @see {@link UserManager.signoutCallback}\n   */\n  async signoutSilentCallback(url = window.location.href) {\n    const logger2 = this._logger.create(\"signoutSilentCallback\");\n    await this._iframeNavigator.callback(url);\n    logger2.info(\"success\");\n  }\n  async revokeTokens(types) {\n    const user = await this._loadUser();\n    await this._revokeInternal(user, types);\n  }\n  async _revokeInternal(user, types = this.settings.revokeTokenTypes) {\n    const logger2 = this._logger.create(\"_revokeInternal\");\n    if (!user) return;\n    const typesPresent = types.filter((type) => typeof user[type] === \"string\");\n    if (!typesPresent.length) {\n      logger2.debug(\"no need to revoke due to no token(s)\");\n      return;\n    }\n    for (const type of typesPresent) {\n      await this._client.revokeToken(\n        user[type],\n        type\n      );\n      logger2.info(`${type} revoked successfully`);\n      if (type !== \"access_token\") {\n        user[type] = null;\n      }\n    }\n    await this.storeUser(user);\n    logger2.debug(\"user stored\");\n    await this._events.load(user);\n  }\n  /**\n   * Enables silent renew for the `UserManager`.\n   */\n  startSilentRenew() {\n    this._logger.create(\"startSilentRenew\");\n    void this._silentRenewService.start();\n  }\n  /**\n   * Disables silent renew for the `UserManager`.\n   */\n  stopSilentRenew() {\n    this._silentRenewService.stop();\n  }\n  get _userStoreKey() {\n    return `user:${this.settings.authority}:${this.settings.client_id}`;\n  }\n  async _loadUser() {\n    const logger2 = this._logger.create(\"_loadUser\");\n    const storageString = await this.settings.userStore.get(this._userStoreKey);\n    if (storageString) {\n      logger2.debug(\"user storageString loaded\");\n      return User.fromStorageString(storageString);\n    }\n    logger2.debug(\"no user storageString\");\n    return null;\n  }\n  async storeUser(user) {\n    const logger2 = this._logger.create(\"storeUser\");\n    if (user) {\n      logger2.debug(\"storing user\");\n      const storageString = user.toStorageString();\n      await this.settings.userStore.set(this._userStoreKey, storageString);\n    } else {\n      this._logger.debug(\"removing user\");\n      await this.settings.userStore.remove(this._userStoreKey);\n      if (this.settings.dpop) {\n        await this.settings.dpop.store.remove(this.settings.client_id);\n      }\n    }\n  }\n  /**\n   * Removes stale state entries in storage for incomplete authorize requests.\n   */\n  async clearStaleState() {\n    await this._client.clearStaleState();\n  }\n  /**\n   * Dynamically generates a DPoP proof for a given user, URL and optional Http method.\n   * This method is useful when you need to make a request to a resource server\n   * with fetch or similar, and you need to include a DPoP proof in a DPoP header.\n   * @param url - The URL to generate the DPoP proof for\n   * @param user - The user to generate the DPoP proof for\n   * @param httpMethod - Optional, defaults to \"GET\"\n   * @param nonce - Optional nonce provided by the resource server\n   *\n   * @returns A promise containing the DPoP proof or undefined if DPoP is not enabled/no user is found.\n   */\n  async dpopProof(url, user, httpMethod, nonce) {\n    var _a, _b;\n    const dpopState = await ((_b = (_a = this.settings.dpop) == null ? void 0 : _a.store) == null ? void 0 : _b.get(this.settings.client_id));\n    if (dpopState) {\n      return await CryptoUtils.generateDPoPProof({\n        url,\n        accessToken: user == null ? void 0 : user.access_token,\n        httpMethod,\n        keyPair: dpopState.keys,\n        nonce\n      });\n    }\n    return void 0;\n  }\n  async generateDPoPJkt(dpopSettings) {\n    let dpopState = await dpopSettings.store.get(this.settings.client_id);\n    if (!dpopState) {\n      const dpopKeys = await CryptoUtils.generateDPoPKeys();\n      dpopState = new DPoPState(dpopKeys);\n      await dpopSettings.store.set(this.settings.client_id, dpopState);\n    }\n    return await CryptoUtils.generateDPoPJkt(dpopState.keys);\n  }\n};\n\n// package.json\nvar version = \"3.2.0\";\n\n// src/Version.ts\nvar Version = version;\n\n// src/IndexedDbDPoPStore.ts\nvar IndexedDbDPoPStore = class {\n  constructor() {\n    this._dbName = \"oidc\";\n    this._storeName = \"dpop\";\n  }\n  async set(key, value) {\n    const store = await this.createStore(this._dbName, this._storeName);\n    await store(\"readwrite\", (str) => {\n      str.put(value, key);\n      return this.promisifyRequest(str.transaction);\n    });\n  }\n  async get(key) {\n    const store = await this.createStore(this._dbName, this._storeName);\n    return await store(\"readonly\", (str) => {\n      return this.promisifyRequest(str.get(key));\n    });\n  }\n  async remove(key) {\n    const item = await this.get(key);\n    const store = await this.createStore(this._dbName, this._storeName);\n    await store(\"readwrite\", (str) => {\n      return this.promisifyRequest(str.delete(key));\n    });\n    return item;\n  }\n  async getAllKeys() {\n    const store = await this.createStore(this._dbName, this._storeName);\n    return await store(\"readonly\", (str) => {\n      return this.promisifyRequest(str.getAllKeys());\n    });\n  }\n  promisifyRequest(request) {\n    return new Promise((resolve, reject) => {\n      request.oncomplete = request.onsuccess = () => resolve(request.result);\n      request.onabort = request.onerror = () => reject(request.error);\n    });\n  }\n  async createStore(dbName, storeName) {\n    const request = indexedDB.open(dbName);\n    request.onupgradeneeded = () => request.result.createObjectStore(storeName);\n    const db = await this.promisifyRequest(request);\n    return async (txMode, callback) => {\n      const tx = db.transaction(storeName, txMode);\n      const store = tx.objectStore(storeName);\n      return await callback(store);\n    };\n  }\n};\nexport {\n  AccessTokenEvents,\n  CheckSessionIFrame,\n  DPoPState,\n  ErrorResponse,\n  ErrorTimeout,\n  InMemoryWebStorage,\n  IndexedDbDPoPStore,\n  Log,\n  Logger,\n  MetadataService,\n  OidcClient,\n  OidcClientSettingsStore,\n  SessionMonitor,\n  SigninResponse,\n  SigninState,\n  SignoutResponse,\n  State,\n  User,\n  UserManager,\n  UserManagerSettingsStore,\n  Version,\n  WebStorageStateStore\n};\n//# sourceMappingURL=oidc-client-ts.js.map\n","import BrowserStorage from \"../browser-store\";\nimport Auth from \"./index\";\nimport Utils from \"../utils\";\n\nimport { UserManager } from 'oidc-client-ts';\n\nexport default class OIDC extends Auth {\n\n  constructor(options, changeListener, router) {\n    super(options, changeListener, router);\n\n    const oidcConfig = {\n      authority: options.openIdConnectUrl.replace('/.well-known/openid-configuration', ''),\n      client_id: 'stac-browser',\n      post_logout_redirect_uri: this.getRedirectUri('/auth/logout'),\n      redirect_uri: this.getRedirectUri('/auth'),\n      automaticSilentRenew: true\n    };\n    this.user = null;\n    this.manager = new UserManager(Object.assign(oidcConfig, options.oidcConfig));\n    const callback = this.setUser.bind(this);\n    this.manager.events.addAccessTokenExpired(callback);\n    this.manager.events.addUserLoaded(callback);\n    this.manager.events.addUserUnloaded(callback);\n    this.browserStorage = new BrowserStorage();\n  }\n\n  setOriginalUri() {\n    this.browserStorage.set('oidc-original-uri', this.router?.currentRoute?.fullPath || window.location.href);\n  }\n\n  restoreOriginalUri() {\n    let originalUri = this.browserStorage.get('oidc-original-uri');\n    if (this.router && Utils.hasText(originalUri)) {\n      if (originalUri.startsWith('/auth/logout')) {\n        originalUri = '/';\n      }\n      this.router.replace(originalUri);\n    }\n    this.browserStorage.remove('oidc-original-uri');\n  }\n\n  getRedirectUri(appPath) {\n    const path = this.router.resolve(appPath).href;\n    return window.location.origin + path;\n  }\n\n  async close() {\n    await this.manager.removeUser();\n    await this.manager.clearStaleState();\n  }\n\n  async login() {\n    this.setOriginalUri();\n    await this.manager.signinRedirect();\n    return null;\n  }\n\n  async confirmLogin() {\n    const user = await this.manager.signinRedirectCallback();\n    await this.setUser(user);\n    this.restoreOriginalUri();\n  }\n\n  async logout() {\n    await this.manager.signoutRedirect();\n  }\n\n  async confirmLogout() {\n    await this.manager.signoutRedirectCallback();\n    await this.setUser(null);\n  }\n\n  async setUser(user = null) {\n    this.user = user;\n    if (user) {\n      await this.changeListener(true, user.access_token);\n    }\n    else {\n      await this.changeListener(false);\n    }\n  }\n\n  updateStore(value) {\n    return this._updateStore(value, 'Authorization', 'header', 'Bearer');\n  }\n\n}\n"],"names":["InvalidTokenError","Error","b64DecodeUnicode","str","decodeURIComponent","atob","replace","m","p","code","charCodeAt","toString","toUpperCase","length","base64UrlDecode","output","err","jwtDecode","token","options","pos","header","part","split","decoded","e","message","JSON","parse","prototype","name","level","logger","nopLogger","debug","info","warn","error","Log","Log2","reset","setLevel","value","setLogger","Logger","_Logger","constructor","_name","this","args","_format","_method","create","method","methodLogger","Object","createStatic","staticMethod","staticLogger","prefix","JwtUtils","decode","generateSignedJwt","payload","privateKey","encodedHeader","CryptoUtils","encodeBase64Url","TextEncoder","encode","stringify","encodedPayload","encodedToken","signature","window","crypto","subtle","sign","hash","encodedSignature","Uint8Array","UUID_V4_TEMPLATE","toBase64","val","btoa","map","chr","String","fromCharCode","join","_CryptoUtils","_randomWord","arr","Uint32Array","getRandomValues","generateUUIDv4","uuid","c","generateCodeVerifier","generateCodeChallenge","code_verifier","encoder","data","hashed","digest","generateBasicAuth","client_id","client_secret","alg","msgUint8","hashBuffer","customCalculateJwkThumbprint","jwk","jsonObject","kty","n","crv","x","y","k","utf8encodedAndHashed","generateDPoPProof","url","accessToken","httpMethod","keyPair","nonce","hashedToken","encodedHash","randomUUID","Math","floor","Date","now","ath","publicJwk","exportKey","publicKey","TypeError","generateDPoPJkt","generateDPoPKeys","generateKey","namedCurve","input","Event","_callbacks","_logger","addHandler","cb","push","removeHandler","idx","lastIndexOf","splice","raise","ev","PopupUtils","center","features","_a","width","find","outerWidth","left","max","round","screenX","height","top","screenY","outerHeight","serialize","entries","filter","key","Timer","_Timer","super","arguments","_timerHandle","_expiration","_callback","diff","getEpochTime","cancel","init","durationInSeconds","logger2","expiration","timerDurationInSeconds","min","setInterval","clearInterval","UrlUtils","readParams","responseMode","parsedUrl","URL","params","URLSearchParams","slice","URL_STATE_DELIMITER","ErrorResponse","form","_b","_c","error_description","error_uri","state","userState","session_state","url_state","ErrorTimeout","AccessTokenEvents","_expiringTimer","_expiredTimer","_expiringNotificationTimeInSeconds","expiringNotificationTimeInSeconds","load","container","access_token","expires_in","duration","expiring","expired","unload","addAccessTokenExpiring","removeAccessTokenExpiring","addAccessTokenExpired","removeAccessTokenExpired","CheckSessionIFrame","_client_id","_intervalInSeconds","_stopOnError","_timer","_session_state","_message","origin","_frame_origin","source","_frame","contentWindow","stop","document","createElement","style","visibility","position","src","href","Promise","resolve","onload","body","appendChild","addEventListener","start","send","postMessage","InMemoryWebStorage","_data","clear","getItem","setItem","removeItem","getOwnPropertyNames","index","ErrorDPoPNonce","JsonService","additionalContentTypes","_jwtHandler","_extraHeaders","_contentTypes","fetchWithTimeout","timeoutInSeconds","initFetch","fetch","controller","AbortController","timeoutId","setTimeout","abort","response","signal","DOMException","clearTimeout","getJson","credentials","headers","_appendExtraHeaders","status","contentType","get","item","startsWith","throw","ok","text","json","statusText","postForm","basicAuth","initCredentials","extraHeaders","responseText","has","customKeys","keys","protectedHeaders","preventOverride","forEach","headerName","includes","toLocaleLowerCase","content","MetadataService","_settings","_signingKeys","_metadata","_metadataUrl","metadataUrl","_jsonService","signingKeys","metadata","fetchRequestCredentials","_fetchRequestCredentials","resetSigningKeys","getMetadata","requestTimeoutInSeconds","assign","metadataSeed","getIssuer","_getMetadataProperty","getAuthorizationEndpoint","getUserInfoEndpoint","getTokenEndpoint","optional","getCheckSessionIframe","getEndSessionEndpoint","getRevocationEndpoint","getKeysEndpoint","getSigningKeys","jwks_uri","keySet","Array","isArray","WebStorageStateStore","store","localStorage","_store","_prefix","set","remove","getAllKeys","len","indexOf","substr","DefaultResponseType","DefaultScope","DefaultClientAuthentication","DefaultStaleStateAgeInSeconds","OidcClientSettingsStore","authority","response_type","scope","redirect_uri","post_logout_redirect_uri","client_authentication","prompt","display","max_age","ui_locales","acr_values","resource","response_mode","filterProtocolClaims","loadUserInfo","staleStateAgeInSeconds","mergeClaimsStrategy","array","disablePKCE","stateStore","revokeTokenAdditionalContentTypes","refreshTokenAllowedScope","extraQueryParams","extraTokenParams","dpop","omitScopeWhenRequesting","endsWith","UserInfoService","_metadataService","_getClaimsFromJwt","async","getClaims","claims","TokenClient","exchangeCode","grant_type","append","exchangeCredentials","exchangeRefreshToken","refresh_token","param","revoke","token_type_hint","ResponseValidator","_claimsService","_userInfoService","_tokenClient","validateSigninResponse","_processSigninState","_processCode","isOpenId","_validateIdTokenAttributes","_processClaims","skipUserInfo","validateCredentialsResponse","id_token","validateRefreshResponse","profile","hasIdToken","validateSignoutResponse","id","validateSub","sub","mergeClaims","tokenResponse","existingToken","incoming","existing","auth_time","azp","State","_State","created","request_type","toStorageString","fromStorageString","storageString","clearStaleState","storage","age","cutoff","i","SigninState","_SigninState","code_challenge","_SigninRequest","state_data","dpopJkt","optionalParams","searchParams","stateParam","resources","r","SigninRequest","OidcScope","SigninResponse","token_type","splitState","expires_at","Number","SignoutRequest","id_token_hint","SignoutResponse","DefaultProtocolClaims","InternalRequiredProtocolClaims","ClaimsService","result","protocolClaims","claim","claims1","claims2","values","mergedValues","DPoPState","OidcClient","settings","metadataService","_validator","createSigninRequest","request","request_uri","login_hint","signinRequest","signinState","readSigninResponseState","removeState","storedStateString","processSigninResponse","dpopProof","getDpopProof","dpopStore","dpopState","processResourceOwnerPasswordCredentials","username","password","signinResponse","useRefreshToken","allowableScopes","providedScopes","s","createSignoutRequest","signoutState","readSignoutResponseState","processSignoutResponse","revokeToken","type","SessionMonitor","_userManager","_start","user","_sub","_checkSessionIFrame","intervalInSeconds","checkSessionIntervalInSeconds","stopOnError","stopCheckSessionOnError","checkSessionIFrame","_stop","monitorAnonymousSession","timerHandle","session","querySessionStatus","tmpUser","raiseEvent","events","_raiseUserSessionChanged","_raiseUserSignedOut","_raiseUserSignedIn","addUserLoaded","addUserUnloaded","_init","catch","getUser","User","_User","scopes","messageSource","AbstractChildWindow","_abort","_disposeHandlers","Set","_window","navigate","location","keepOpen","reject","listener","scriptOrigin","_dispose","add","removeEventListener","reason","close","dispose","_notifyParent","parent","targetOrigin","DefaultPopupWindowFeatures","toolbar","closePopupWindowAfterInSeconds","DefaultPopupTarget","DefaultAccessTokenExpiringNotificationTimeInSeconds","DefaultCheckSessionIntervalInSeconds","DefaultSilentRequestTimeoutInSeconds","UserManagerSettingsStore","popup_redirect_uri","popup_post_logout_redirect_uri","popupWindowFeatures","popupWindowTarget","redirectMethod","redirectTarget","iframeNotifyParentOrigin","iframeScriptOrigin","silent_redirect_uri","silentRequestTimeoutInSeconds","automaticSilentRenew","validateSubOnSilentRenew","includeIdTokenInSilentRenew","monitorSession","query_status_response_type","revokeTokenTypes","revokeTokensOnSignout","includeIdTokenInSilentSignout","accessTokenExpiringNotificationTimeInSeconds","userStore","sessionStorage","IFrameWindow","_IFrameWindow","_timeoutInSeconds","createHiddenIframe","iframe","timer","parentNode","_a2","frame","target","removeChild","notifyParent","IFrameNavigator","prepare","callback","checkForPopupClosedInterval","second","PopupWindow","popupSignal","centeredPopup","open","closed","focus","popupClosedInterval","notifyOpener","opener","PopupNavigator","RedirectNavigator","targetWindow","self","redirect","bind","promise","UserManagerEvents","_userLoaded","_userUnloaded","_silentRenewError","_userSignedIn","_userSignedOut","_userSessionChanged","removeUserLoaded","removeUserUnloaded","addSilentRenewError","removeSilentRenewError","_raiseSilentRenewError","addUserSignedIn","removeUserSignedIn","addUserSignedOut","removeUserSignedOut","addUserSessionChanged","removeUserSessionChanged","SilentRenewService","_isStarted","_retryTimer","_tokenExpiring","signinSilent","RefreshState","UserManager","redirectNavigator","popupNavigator","iframeNavigator","_client","_redirectNavigator","_popupNavigator","_iframeNavigator","_events","_silentRenewService","startSilentRenew","_sessionMonitor","_loadUser","removeUser","storeUser","signinRedirect","requestArgs","bind_authorization_code","handle","_signinStart","signinRedirectCallback","_signinEnd","signinResourceOwnerCredentials","_buildUser","signinPopup","_signin","signinPopupCallback","_useRefreshToken","verifySub","signinSilentCallback","signinCallback","signoutCallback","signoutRedirectCallback","signoutPopupCallback","signoutSilentCallback","navResponse","signoutRedirect","_signoutStart","_signoutEnd","signoutPopup","_signout","_revokeInternal","signoutRequest","signoutResponse","signoutSilent","revokeTokens","types","typesPresent","stopSilentRenew","_userStoreKey","dpopSettings","dpopKeys","OIDC","Auth","changeListener","router","oidcConfig","openIdConnectUrl","getRedirectUri","manager","setUser","browserStorage","BrowserStorage","setOriginalUri","_this$router","_this$router$currentR","currentRoute","fullPath","restoreOriginalUri","originalUri","Utils","hasText","appPath","path","login","confirmLogin","logout","confirmLogout","updateStore","_updateStore"],"sourceRoot":""}